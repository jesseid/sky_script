--[[云野一图(115.60298156738,197.2080078125,-435.11529541016)--1(118.97437286377,197.05804443359,-431.48291015625)--2(125.53090667725,196.61488342285,-434.53515625)--3(121.2052230835,197.01617431641,-427.06924438477)--4(119.4797744751,196.49667358398,-423.55166625977)--5(78.99172210693,150.2004699707,1.78256821632)--6(58.6406211853,151.20434570312,7.38893318176)--7(102.32624053955,155.1436920166,16.21933174133)--8(81.76918029785,158.13374328613,50.05578231812)--9(144.96569824219,161.92639160156,5.63502502441)--10(27.23487663269,158.83700561523,-20.36087036133)--11--云野右图(-11.9019241333,164.92292785645,-3.0072016716)--入口(-102.87348175049,171.93359375,56.98407363892)--1(-104.64253234863,158.45077514648,53.33500564575)--2(-145.32948303223,171.31610107422,86.34217071533)--3(-160.31233215332,157.57586669922,115.76903533936)--4(-157.09628295898,181.24993896484,110.29733276367)--5(-145.04643249515,180.54747009277,120.26123809814)--6(-157.55725097656,197.08999633789,118.56550598145)--7(-181.82606506348,189.62023925781,125.00187683105)--8(-192.41775512695,195.73463439941,86.82441711426)--9(-197.01600646973,205.75592041016,86.32865142822)--10(-198.05183410645,180.20304870605,86.42471313477)--11(-194.69427490234,178.33114624023,83.36176350049)--12(-45.18014907837,167.0774230957,36.54417800903)--出口--云野左图(170.20217895508,163.0714263916,6.96053695679)--入口(302.50225830078,188.17359924316,66.2142791748)--1(282.06405639648,196.42961120605,97.41554260254)--2(258.45153808594,199.35935974121,127.02438354492)--3(297.45776367188,181.99851989746,133.0059967041)--4(310.27359008789,181.79270935059,139.18994140625)--5(399.08645629883,181.65843200684,200.22633361816)--6(410.17614746094,186.00856018066,210.36117553711)--7(374.6262512207,181.3630065918,225.45808410645)--8(313.9404296875,188.25379943848,203.39910888672)--9(268.37118530273,193.69003295898,213.44342041016)--10(243.67858886719,198.7829284668,228.57458496094)--出口--云野二图(88.9342956543,181.41004943848,231.95796203613)--1(99.4754486084,195.13636779785,253.24153137207)--2(92.93378448486,199.28660583496,273.75415039062)--3(95.48497009277,203.99990844727,272.60464477539)--4(98.00842285156,203.39779663086,274.16390991211)--5(90.58159637451,187.71266174316,351.65072631836)--6(65.08000946045,194.42506408691,361.20562744141)--7(67.10677337646,199.14305114746,362.57659912109)--8(65.64736938477,199.142578125,364.82284545898)--9(65.51026153564,187.55653381348,362.9114074707)--10(56.51884841919,186.13949584961,368.4674987793)--11(48.21697998047,186.23483276367,356.98342895508)--12(31.19235610962,184.72412109375,349.10522460938)--13(-11.35507583618,188.39305114746,324.89636230469)--14(-15.24630451202,192.9019317627,319.41375732422)--15(-16.35024452209,196.62608337402,318.31805419922)--16(-19.20211601257,197.23623657227,318.74365234375)--17(-41.19258499146,183.73767089844,317.03952026367)--18--云野影藏图(-50.14623641968,181.75190734863,323.06060791016)--入口(-15.90675163269,19.36320304871,0.04607446492)--1(-6.95440864563,20.6263217926,0.02671859413)--2--等于2 then(-26.77502822876,58.40365600586,-45.02451324463)--3(5.90445566177,39.62705993652,-2.53018903732)--4(2.32470178604,39.62628555298,-5.97694396973)--5(-2.26312303543,39.62630844116,-5.67430210114)--6(-5.90018320084,39.62672424316,-2.39154171944)--7(-6.01038551331,39.62662887573,2.48111796379)--8(-2.58554887772,39.62702941895,5.93406152725)--9(2.43038368225,39.62660598755,6.11527490616)--10(6.11024856567,39.62628555298,2.37555551529)--11(31.99162864685,42.6743812561,0.09687811881)--出口(133.4786987304,250.94985961914,456.36135864258)--云野2图终点门前(121.98816680908,254.75132751465,477.07861328125)--云野2图终点门前--云野终点图(130.70057678223,255.21701049805,486.0810546875)--入口(-100.09580993652,83.84275817871,43.61852264404)--1(-106.75609588623,84.60436248779,40.547335565186)--2(-109.46098327637,87.63363647461,45.55025100708)--3(-128.94709777832,75.568359375,42.68757247925)--4--雨林一图(132.00636291504,217.58917236328,-627.18487548828)(132.22692871094,218.2283782959,-616.41571044922)(143.14457702637,219.44395446777,-606.51513671875)(-2.71335673332,94.98352813721,-228.54418945312)(18.42119979858,95.694480896,-217.98950195312)(20.60919570923,97.28884887695,-198.0877532959)(4.1483707428,100.23230743408,-189.62496948242)(26.44177627563,97.71215057373,-176.8835144043)(9.25449371338,98.13481903076,-154.41754150391)(32.01079940796,98.20777130127,-146.05264282227)(7.25707769364,100.0472869873,-139.33088684082)(15.39059448242,99.52299499512,-132.5378112793)(30.70701217651,99.8190536499,-132.4546661377)(28.63400840759,98.6180267334,-118.03186035156)--雨林二图(30.37040519714,98.88845825195,-109.27439880371)--入口(27.41429328918,99.99300384521,-106.8138809204)(30.33293151855,106.13107299805,-71.55737304688)(15.90950489044,106.37357330322,-66.79668426514)(40.35590362549,98.17053222656,-45.0782661438)(24.79768943787,117.84935760498,-26.76824378967)(38.6798286438,105.24387359619,-2.9914047718)(54.22513580322,97.78234863281,-3.40694475174)(45.4478225708,96.54899597168,-3.13172483444)(38.43868255615,96.54707336426,-10.66464424133)(63.35177612305,96.96760559082,10.86319732666)(50.89640045166,102.59790039062,30.10159301758)(64.74167633057,100.17140197754,49.37391662598)(77.50698852539,97.13687896729,29.4581489563)(91.65512084961,99.29676818848,34.40578079224)(81.5911026001,103.39978027344,18.78395843506)(89.04072570801,99.73249816895,-29.41781997681)(67.91477203369,106.90495300293,-52.28639602661)(107.14709472656,112.42742156982,-48.92885971069)(70.78517913818,107.56037902832,-62.12035369873)(97.99615478516,112.56428527832,-102.44512939453)(68.61032104492,107.42108917236,-90.46832275391)--雨林隐藏图1(-2.42549586296,111.49240112305,-52.30210113525)--入口(13.92667865753,83.74536132812,-57.26467132568)(-2.3912832737,85.3596496582,-50.60078048706)(-16.08317375183,85.39809417725,-32.63803100586)(-8.14448833466,84.73457336426,-7.89531230927)(-1.13187742233,84.98815155029,-12.17042732239)(7.94176197052,92.88522338867,6.60753107071)(-29.21605491638,95.50507354736,15.272564888)(-17.57136535645,96.20481872559,21.40295791626)--雨林隐藏图2(54.33259963989,56.22098922729,44.24211502075)--入口(63.93209457397,78.76077270508,-282.17562866211)(61.18431472778,80.60235595703,-284.86975097656)(64.88576507568,79.76458740234,-288.55004882812)(2.15540909767,121.2936630249,-365.80477905273)(-38.06717300415,132.30741882324,-197.39756774902)(-35.30477905273,132.96231079102,-193.10319519043)(-54.95386505127,132.33648681641,-198.46984863281)--雨林中转(-59.19394302368,210.49002075195,-283.56454467773)--入口(0.31548553705,90.00939941406,72.516456604)(5.0689702034,90.26519012451,68.48607635498)(15.98097038269,88.75833892822,98.15411376953)--雨林三图(16.3238658905,88.25741577148,124.13977050781)--入口(-79.92333984375,153.36772155762,154.53463745117)(-73.72756958008,134.62478637695,176.23023986816)(-83.33684539795,134.74411010742,213.68826293945)(-94.00321960449,136.26892089844,225.59622192383)(-75.43740081787,134.71807861328,231.26933288574)(-69.64479064941,144.39186096191,228.44799804688)(-64.05876159668,143.58644104004,220.79084777832)(-49.71687316895,134.75036621094,223.28747558594)(-35.54241943359,137.19285583496,159.83674621582)(-16.83688735962,134.67930603027,165.29678344727)(-10.21327877045,134.76959228516,138.92083740234)(-6.37375116348,138.80084228516,110.69288635254)(-11.09886646271,138.50883483887,86.38436889648)(22.05228424072,140.27615356445,11.05105304718)(45.14354324341,145.53717041016,53.00225830078)(52.08951187134,144.65481567383,72.5608215332)(72.98959350586,146.37847900391,134.75663757324)(118.52641296387,164.81806945801,157.97132873535)(48.06265640259,135.30081176758,218.61390686035)(25.38379096985,135.10757446289,220.52201843262)(3.95169067383,137.30879211426,194.00357055664)(-21.14779853821,134.70893859863,199.55110168457)(-22.45495223999,135.13790893555,222.07760620117)(-22.48716545105,140.5375213623,247.89054870605)--雨林终点(-17.19787025452,182.95243835449,403.08895874023)--入口(6.51100826263,104.87572479248,-11.67045783997)(15.96475696564,110.62584686279,-16.04157447815)(-16.87840843201,104.87336730957,-5.16422128677)(-13.47823810577,104.87596130371,7.01203155518)(-7.82540941238,108.40357971191,68.83112335205)(8.53291988373,110.02577972412,70.07482910156)(13.52785778046,108.70034790039,77.95269775391)(-10.54486942291,108.91596221924,97.63005065918)(0.11613775045,106.91246032715,96.4351272583)--峡谷一图(-44.12378311157,306.01348876953,23.13875961304)(-31.74607086182,306.10690307617,1.97219336033)(-126.67539215088,267.88735961914,-110.97894287109)(-103.04829406738,260.23236083984,-118.17642974854)(-92.92546081543,255.66632080078,-149.84927368164)(-99.74283599854,251.56791687012,-166.01132202148)(-102.09551239014,249.91656494141,-172.96983337402)(-105.04325866699,248.44064331055,-179.64167785645)(-108.12476348877,246.900390625,-186.86201477051)(-111.04677581787,245.32696533203,-194.20146179199)(-121.54612731934,240.10643005371,-222.98414611816)(-150.10296630859,227.3816986084,-226.3929901123)(-135.14601135254,198.65240478516,-332.60443115234)(-64.75140380859,125.15168762207,-449.45642089844)(10.55853366852,87.58947753906,-454.77020263672)(67.66337585449,75.52090454102,-478.75341796875)(94.08749389648,72.73916625977,-489.95175170898)(158.07543945312,75.82615661621,-446.68124389648)(186.00759887695,48.03629684448,-525.98504638672)(172.03317260742,44.65506744385,-486.58297729492)(221.00025939941,44.74003219604,-5161.30548095703)(220.02799987793,44.73042678833,-521.92736816406)(189.71067810059,44.84695053101,-546.39874267578)(185.78855895996,44.91770172119,-547.43212890625)--峡谷左二图(223.6668548584,65.62539672852,-629.39367675781)--入口(26.30800056458,454.86239624023,176.21231079102)(114.96937561035,477.28637695312,15.91835689545)(98.66351318359,472.3896484375,0.81318873167)(79.4423828125,480.72006225586,24.37182998657)(18.01672363281,507.2067565918,-4.52004051208)(26.84756088257,530.70483398438,-38.68095779419)(95.10320281982,560.63580322266,-47.5903968811)(105.93483734131,558.57275390628,-37.62168121338)(113.02637481689,534.58575439453,-27.6976852417)(92.42867279053,530.98199462891,-50.72128295898)(112.46508026123,474.00286865234,-68.04123687744)(129.54693603516,478.78283691406,-71.76959228516)(105.516746521,478.78231811523,-90.7293548584)(122.75747680664,480.65939331055,-114.1725692749)(142.99169921875,480.65942382812,-98.38182067871)(156.11929321289,485.65502929688,-120.72505187988)(140.41232299805,485.6552734375,-131.97975158691)(155.41200256348,495.31036376953,-158.84375)(174.82008361816,495.25396728516,-144.0052947998)--峡谷左赛道(205.42976379395,491.84970092773,-203.36633300781)--入口(192.87881469727,1187.60620117188,393.19818115234)(188.40533447266,1187.22436523438,392.33361816406)(183.3757019043,1187.22448730469,391.44891357422)(178.79174804688,1187.2255859375,390.28259277344)(173.68061828613,1187.22436523433,388.91067504883)(189.56620788574,1187.22448730469,406.92791748047)(184.89176940918,1187.24682617188,406.24502563477)(180.40858459473,1187.22583007812,405.12847900391)(175.58976745605,1187.228515625,403.9704284668)(170.52285766602,1187.23022460938,402.84414672852)--30s打坐(-269.3837890625,1172.09167480469,286.34552001953)(153.6636505127,999.330078125,-96.28460693359)--10s飞(44.09857940674,169.2801361084,11.14154911041)(57.88538742065,133.83950805664,-214.03375244141)--30s领奖(36.63426208496,135.61135864258,-221.3716583252)(79.22841644287,135.61253356934,-218.13696289062)(55.8957901001,135.11459350586,-259.83737182617)(63.43298721313,136.50849914551,-263.92175292969)--峡谷终点(61.42583465576,138.1378326416,-293.04681396484)--入口(-30.55983161926,140.14796447754,-150.14045715332)(-19.65181922913,153.76843261719,-127.14723968506)(-11.21016025543,153.77114868164,-118.03510284424)(-30.43489646912,147.18525695801,-151.55996704102)(9.29844284058,141.3869934082,-186.97894287109)(9.3048658371,141.38584899902,-190.43496704102)--峡谷一图~右赛道(197.15872192383,48.49141693115,-516.93634033203)(291.46752929688,39.44458770752,-528.46527099609)--30s打坐(158.32211303711,852.73541259766,475.7946472168)(259.29107666016,586.7119140625,-571.33093261719)(50.4543800354,159.39141845703,-31.0505657196)(57.88567733765,133.83946228027,-214.03512573242)--墓土一图(-70.22785186768,66.49369049072,-759.26147460938)(-97.79056549072,63.48319244385,-790.15093994141)(-139.69577026367,62.95037841797,-797.40356445312)--20秒降落(8.60825634003,0.75030183792,301.68978881836)(-3.99469828606,0.37560066581,296.41793823242)(32.28802490234,0.37636706233,235.99894714355)(-31.64685821533,2.1539618969,243.37582397461)(-29.39075088501,2.01477503777,238.9172668457)(-28.72294616699,1.20552659035,235.2751159668)(-26.15162849426,0.88573569059,214.15827941895)(-92.274269104,2.31374073029,327.30935668945)(-59.85810852051,1.15041458607,232.35001220703)(-56.83233642578,0.57013261318,226.86643981934)(-54.00981140137,1.15105247498,220.69749450684)(-80.39521026611,9.19505214691,164.20509338379)--墓土二图(-94.89070892334,12.30350045013,156.4560546875)--入口(68.90135955811,90.94641113281,258.72088623047)(44.20020294189,89.84394836426,227.9577331543)(51.45596694946,99.28791809082,155.04475402832)(34.81157302856,93.70342254639,139.69458007812)(47.12553787231,93.69466400146,142.97381591797)(40.4489440918,95.20787811279,120.91116333008)(63.86231231689,66.71259307861,-15.30156612396)(48.4670715332,69.82891845703,-59.96273803711)(84.73511505127,64.37671661377,-99.42739105225)(8.32419109344,78.00788116455,-142.94731140137)(-5.35853862762,82.17987060547,-123.11887359619)(-7.18160104752,85.37297821045,-126.04454040527)(-8.05536174774,86.23159790039,-128.71955871582)(0.74927788973,89.12622833252,-134.57244873047)(45.10829544067,82.42629241943,-132.66519165039)(71.19222259521,69.28861999512,-157.12396240234)(37.28358078003,69.23686218262,-213.30883789062)(39.11396026611,71.32260131836,-221.57130432129)--墓土沉船图(192.79643249512,68.40534210205,-72.22341156006)--入口(-179.61277770996,4.36869573593,492.37521362305)(-188.01779174805,2.03948664665,476.74789428711)(-201.84712219238,0.914894104,432.59393310547)(-132.09101867676,4.07177019119,416.7109375)(-159.04856872559,0.37696796656,376.98382568359)(-162.26022338867,7.22910165787,357.97021484375)(-170.01536560059,11.28509044647,367.14947509766)(-187.97894287109,1.05554842949,403.07879638672)(-268.81576538086,5.68651103973,428.91809082031)(-267.75576782227,6.6842880249,423.20504760742)(-274.10137939453,11.81196689606,424.94036865234)(-289.75094604492,18.6405544281,419.79876708984)(-288.99273681641,29.45294952393,405.53567504883)--墓土四龙图(-346.98251342773,35.15969085693,384.67120361328)--入口(-49.32916259766,104.83728027344,-77.6501159668)(-188.12129211426,121.73218536377,-169.35525512695)(-212.97743225098,131.00276184082,-167.36408996582)(-213.3311920166,140.81796264648,-163.50823974609)(-244.87803649902,118.97737884521,-153.44711303711)(-228.24075317383,102.52364349365,-183.68463134766)(-249.65034484863,100.38004302979,-196.02241516113)(-231.17218017578,100.37832641602,-229.30694580078)(-217.93591308594,104.36611938477,-242.26356506348)(-237.78598022461,96.26966094971,-285.71334838867)(-207.85675048828,96.69178771973,-305.19158935547)(-225.3459777832,83.58068084717,-363.93365478516)(-275.20642089844,84.91905975342,-338.89965820312)(-270.44323730469,88.63068389893,-368.12487792969)--墓土终点(-287.76065063477,93.07566833496,-405.00946044922)--入口(-4.3422498703,207.22552490234,-1.61182498932)(4.53664827347,207.20820617676,-1.94537377357)(-0.39730292559,207.41523742676,-6.12582874298)--墓土螃蟹岛(151.11950683594,1.19466686249,46.83893966675)--40秒坐船(105.68017578125,116.20708465576,462.01690673828)(78.25351715088,109.60757446289,485.55395507812)(42.22459411621,108.95956420898,501.55215454102)(79.46577453613,108.4411621094,523.63012695312)(280.42666625977,115.15145111084,513.50421142578)(300.71304321289,122.5364151001,522.43548583984)(302.32046508789,120.71385955811,544.26470947266)(330.21633911133,120.46535491943,557.35083007812)(281.56735229492,103.83702087402,363.01419067383)(284.81094360352,102.84635162354,346.02285766602)(303.26889038086,113.46236419678,349.53405761719)(287.11633300781,120.31791687012,352.26409912109)--禁阁影藏图(-43.31412124634,39.20034408569,-97.93517303467)--右隐藏图入口(50.03171539307,541.80670166016,26.13645362854)(69.59448242188,541.40093994141,27.65027618408)(72.85754394531,565.47186279297,-17.47369194031)(76.08060455322,563.00994873047,-23.10515213013)(72.93733978271,565.47320556641,-31.49273681641)(61.79039001465,551.71429443359,-37.71782302856)(75.95713043213,552.21374511719,-13.3358745575)(56.93070602417,552.21441650391,-18.62998008728)(61.66952896118,543.85046386719,-41.39209368545)(54.76568603516,543.84802246094,-41.38636779785)(78.69750976562,554.70959472656,-31.58866119385)(85.27835083008,554.71136474609,-31.59345626831)(76.20945739746,541.38464355469,-10.92284202576)--禁阁一层(40.35205459595,541.86962890625,-25.08329963684)--入口(28.26111793518,37.39163208008,-134.52861022949)(34.28949356079,42.328956604,-118.72557830811)(38.79634094238,47.1720123291,-126.31859588623)(31.71107292175,47.16427230835,-137.21899414062)(6.91684961319,37.764503479,-70.84230041504)(-5.76319360733,40.401512146,-32.668384552)(-21.63892555237,42.0424041748,-1.71010291576)(-46.57090377808,40.40052032471,-16.48282623291)(-62.28732681274,41.82263183594,-12.90044879913)(-60.73867034912,41.10559463501,22.90926742554)--禁阁二层(21.35787582397,79.29556274414,6.68214130402)(11.27268409729,82.20293426514,21.91019821167)(19.32908248901,82.73078155518,19.42357254028)(40.81945800781,83.96297454834,38.4188079834)(23.88597106934,83.90636444092,48.79845809937)--禁阁三层(-0.1043953374,214.60452270508,2.59286475182)--5s(-16.05261611938,164.30964660645,-48.09916687012)(24.78944969177,148.55657958984,34.13998031616)(-38.91857528687,129.68870544434,9.5477372158)--禁阁五层(-5.22235155106,294.52462768555,-0.12603969872)(3.71660423279,294.91845703125,2.12295842171)(-3.01484441757,295.54183959961,6.47273492813)(6.21425771713,302.41970825195,47.98390579224)(-10.96362018585,307.49496459961,58.38714599609)(-1.83383011818,304.40658569336,58.78987121582)(9.81625366211,306.41543579102,56.92166137695)(0.25948709249,309.75799560547,68.38743591309)(8.72283935547,303.875,51.66994857788)]]--local xyz = {0,0,0}function zb(xyz)	tmp = {}	for i=1, 3 do		tmp[#tmp+1] = {}		tmp[#tmp].address = cspy.address + i * 4		tmp[#tmp].flags = gg.TYPE_FLOAT		tmp[#tmp].value = xyz[i]	end	gg.setValues(tmp)endfunction aa()gg.setVisible(false)gg.clearResults()gg.setRanges(4)gg.toast("加群753373384")gg.searchNumber("-1,067,909,120",gg.TYPE_DWORD) gg.refineNumber("-1,067,909,120",gg.TYPE_DWORD)ks = gg.getResultCount()    if ks ~= 0 then        lll = gg.getResults(ks)        tmp = {}        for k, v in pairs(lll) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address +88            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                lll[1] = tmp[k]                break            end        end        cspy={}	    cspy[1] = {}	    cspy[1].address = lll[1].address + 48	    cspy[1].flags = gg.TYPE_FLOAT	    cspy = gg.getValues(cspy)	    cspy = cspy[1]	    gg.toast("坐标获取成功🐷🐷")    else        gg.toast("坐标获取失败🐽🐽")        os.exit()    end    gg.clearResults()end--[[]-- 云野一图坐标local yunyezb1 = {}yunyezb1[1] = {8.90809631348,1.68645858766,4.66904211044}yunyezb1[2]= {115.11743927002,198.37284851074,-412.91702270508}yunyezb1[3]= {82.30505371094,155.05268859863,19.00763320923}-- 云野右图坐标local yunyezb2 = {}yunyezb2[1] = {-13.36223697662,164.1151428227,-3.93698263168}yunyezb2[2] = {-107.2660446167,172.1589050293,57.54264450073}yunyezb2[3] = {-147.8744354248,180.35134887695,111.60083770752}yunyezb2[4] = {-191.30493164062,194.12046813965,92.28816986084}-- 云野左图坐标local yunyezb3 = {}yunyezb3[1] = {-47.11139678955,179.24996948242,36.90230560303}yunyezb3[2] = {171.28395080566,163.02391052246,6.9861369133}yunyezb3[3] = {281.03967285156,203.85572814941,118.18124389648}yunyezb3[4] = {394.80178833008,180.8814239502,208.9743347168}yunyezb3[5] = {271.46618652344,192.82070922852,205.6898651123}-- 云野尾图坐标yunyezb4 = {}yunyezb4[1] = {244.32598876953,197.86904907227,228.06080627441}yunyezb4[2] = {89.51289245605,198.62976074219,268.43621826172}yunyezb4[3] = {69.03224182129,192.38856506348,354.64413452148}yunyezb4[4] = {-10.87873077393,192.04830932617,315.67645263672}yunyezb4[5] = {121.45398712158,255.07366943359,467.25061035156}-- 云野终点坐标yunyezb5 = {}yunyezb5[1] = {131.30647277832,255.10313415527,486.70895385742}yunyezb5[2] = {-115.13949584961,92.06437683105,42.18388748169}-- 雨林一图坐标local yulin1 = {}yulin1[1] = {4.90189743042,1.7630636692,7.48623180389}yulin1[2] = {130.75828552246,224.34687805176,-602.71795654297}yulin1[3] = {14.43241500854,97.69249725342,-218.88102722168}-- 雨林二图坐标local yulin2 = {}yulin2[1] = {14.76787853241,94.86846923828,-187.47811889648}yulin2[2] = {23.47234535217,97.78204345703,-133.36102294922}-- 雨林三图坐标local yulin3 = {}yulin3[1] = {30.37040519714,98.88845825195,-109.27439880371}yulin3[2] = {31.5622253418,100.01309204102,-103.3267364502}yulin3[3] = {26.11565208435,103.0054397583,-82.32592773438}yulin3[4] = {80.05570983887,107.88425445557,-96.13883972168}yulin3[5] = {93.87911224365,110.7958984375,-52.62438583374}yulin3[6] = {74.68232727051,98.61708831787,-17.40866279602}yulin3[7] = {47.92622375488,104.16135406494,6.3690123558}yulin3[8] = {67.58702087402,98.89938409424,33.17612075806}-- 雨林尾图坐标local yulin4 = {}yulin4[1] = {66.40958404541,101.3518371582,57.84840011597}yulin4[3] = {-86.91445159912,142.59028625488,177.07545471191}yulin4[4] = {-74.32703399658,144.21041870117,223.14186096191}yulin4[5] = {-9.88118457794,135.65356445312,155.92399597168}yulin4[6] = {-2.02398014069,137.56015014648,94.08730316162}yulin4[7] = {36.42116928101,140.1411895752,34.71224212646}yulin4[8] = {84.40836334229,145.81631469727,159.82514953616}yulin4[9] = {-22.81835746765,151.38169433594,222.27349853516}-- 雨林终点图坐标local yulin5 = {}yulin5[1] = {-16.83828544617,182.94024658203,402.96005249023}yulin5[2] = {-0.08104625344,115.99523162842,-2.72330307961}yulin5[3] = {2.57387018204,107.53649902344,79.84284973145}-- 峡谷一图坐标local xiagu1 = {}xiagu1[1] = {-3.10090661049,2.10288238525,7.63490390778}xiagu1[2] = {178.09007263184,49.29264450073,-515.06256103516}-- 峡谷二图坐标local xiagu2 = {}xiagu2[1] = {223.56391906738,66.52805328369,-629.701171875}xiagu2[2] = {39.10639572144,465.65176391602,150.25552368164}xiagu2[3] = {95.01110076904,560.63580322266,-47.59596633911}-- 峡谷赛道图坐标local xiagu3 = {}xiagu3[1] = {205.75561523438,491.8512878418,-204.55242919922}xiagu3[2] = {-87.75131988525,1175.64123535156,362.62036132812}-- 峡谷尾图坐标local xiagu4 = {}xiagu4[1] = {154.0153503418,1011.15362548828,-97.60314178467}xiagu4[2] = {57.89561843872,133.83949279785,-214.00402832031}-- 峡谷尾图坐标local xiagu5 = {}xiagu5[1] = {60.56647491455,138.13330078125,-293.24880981445}xiagu5[2] = {-28.79566764832,140.62512207031,-144.80619812012}xiagu5[3] = {-10.99517059326,153.76098632812,-123.88345336914}xiagu5[4] = {9.05787944794,146.13987731934,-188.91961669922}-- 墓土起始图坐标local mutu1 = {}mutu1[1] = {-6.29799985886,1.58005309105,4.30489492416}-- 墓土一图坐标local mutu2 = {}mutu2[1] = {-136.86598205566,59.69040298462,-798.71264648438}mutu2[2] = {3.75268936157,2.02050471306,302.74490356445}mutu2[3] = {39.57469558716,1.18943119049,231.70831298828}mutu2[4] = {-19.4671421051,1.61124813557,220.27662658691}mutu2[5] = {-45.26943969727,2.59516334534,220.30529785156}mutu2[6] = {-79.40332794189,4.3054728508,326.60189819336}mutu2[7] = {-83.4979019165,10.33677768707,161.88903808594}-- 墓土二图坐标local mutu3 = {}mutu3[1] = {-93.44805145264,12.25340080261,157.8000610352}mutu3[2] = {66.47315979004,91.47152709961,258.93222045898}mutu3[3] = {59.91714859009,99.28720092773,153.49264526367}mutu3[4] = {53.15424346924,99.28839874268,130.21598815918}mutu3[5] = {64.62148284912,66.90205383301,-17.39302253723}mutu3[6] = {49.07418823242,69.87921142578,-61.32640457153}mutu3[7] = {84.39138031006,64.37548065186,-99.65833282471}mutu3[8] = {72.75804901123,68.82402038574,-154.62091064453}mutu3[9] = {7.30580329895,77.96953582764,-134.8207244873}mutu3[10] = {31.65027999878,71.3992767334,-222.2785949707}-- 墓土终点图坐标local mutu4 = {}mutu4[1] = {33.59671020508,78.84104919434,-254.92140197754}mutu4[2] = {-48.6858215332,104.34170532227,-79.04187774658}mutu4[3] = {-198.5791015625,126.42858123779,-167.11233520508}mutu4[4] = {-245.23553466797,118.84942626953,-154.31811523438}mutu4[5] = {-241.96951293945,102.78507995605,-201.89422607422}mutu4[6] = {-231.89678955078,101.1646194458,-228.68255615234}mutu4[7] = {-238.2059173584,96.32413482666,-286.48190307617}mutu4[8] = {-274.05374109375,84.92595672607,-340.15267944336}mutu4[9] = {-226.27702331543,83.49276733398,-363.69110107422}mutu4[10] = {-270.02545166016,90.63471984863,-376.97351074219}]]--biao = {	"能量无限⚡【开】",	"光翼满级☀️【开】",	"人物加速🎅【开】",	"超级跳远☔【开】",    "云朵消失☁️【开】",    "黑人抬棺🙏🏿️【开】",	"全图点燃🎉【开】",	"全图炸花🎈【开】",	"整图吸收✨【开】",    "带人跑图🙏【慢】",    "独狼跑图🐺【快】",    "无翼宝贝💗【开】",    "雨林停雨💦【开】",    "背后萤火🔥【开】",    "无敌状态💖【开】",    "自慰系列🍑【自慰】",    "彩蛋瞬移🍊【彩蛋】",	"清空退出🌈",}function Main()  kaiguan = gg.choice(biao, nil, "🌸低调跑图不要炫耀🌸")  if kaiguan == 1 then a() end  if kaiguan == 2 then b() end  if kaiguan == 3 then c() end  if kaiguan == 4 then d() end  if kaiguan == 5 then h() end  if kaiguan == 6 then zbcb() end  if kaiguan == 7 then e() end  if kaiguan == 8 then f() end  if kaiguan == 9 then Candles() end  if kaiguan == 10 then i()  end  if kaiguan == 11 then j()  end  if kaiguan == 12 then wy()  end  if kaiguan == 13 then ys()  end  if kaiguan == 14 then yh()  end  if kaiguan == 15 then wdzt()  end  if kaiguan == 16 then zwxl()  end  if kaiguan == 17 then cdsy()  end  if kaiguan == 18 then Exit() endendlocal AA=0function a()    gg.toast("飞行状态下不可开启🍢🍢🍢")    if AA~=1 then	    biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");	        -- 能量无限        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("256",gg.TYPE_DWORD)         gg.refineNumber("256",gg.TYPE_DWORD)        wxfks = gg.getResultCount()        if wxfks ~= 0 then        wxf = gg.getResults(wxfks)        tmp = {}        for k, v in pairs(wxf) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address +60            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1.25 then                wxf[1] = tmp[k]                break            end        end        wxfpy={}	    wxfpy[1] = {}	    wxfpy[1].address = wxf[1].address -56	    wxfpy[1].flags = gg.TYPE_FLOAT	    wxfpy[1].value = "14"        wxfpy[1].freeze = true        gg.addListItems(wxfpy)        gg.clearResults()        gg.toast("无限能量开启⚡⚡⚡")	    AA=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");	    gg.toast("无限能量关闭⚡⚡⚡")	    wxfpy[1].freeze = false	    gg.addListItems(wxfpy);	    AA=0	endendlocal YH = 0function yh()    gg.alert("⚠️请不要在飞行时开启⚠️")     if YH~=1 then	    biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");	        -- 背后萤火        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("256",gg.TYPE_DWORD)         gg.refineNumber("256",gg.TYPE_DWORD)        yhh = gg.getResultCount()        if yhh ~= 0 then        bhyh = gg.getResults(yhh)        tmp = {}        for k, v in pairs(bhyh) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address +60            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1.25 then                bhyh[1] = tmp[k]                break            end        end        yhpy={}	    yhpy[1] = {}	    yhpy[1].address = bhyh[1].address -28	    yhpy[1].flags = gg.TYPE_FLOAT	    yhpy[1].value = "99"        yhpy[1].freeze = true        gg.addListItems(yhpy)        gg.clearResults()        gg.toast("背后萤火开启⚡⚡⚡")	    YH=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");	    gg.toast("背后萤火关闭⚡⚡⚡")	    yhpy[1].freeze = false	    gg.addListItems(yhpy);	    YH=0	endendlocal wdd = 0function wdzt()    if wdd~=1 then        gg.alert("⚠️请不要在飞行时开启⚠️") 	    biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");	        -- 无敌状态        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("256",gg.TYPE_DWORD)         gg.refineNumber("256",gg.TYPE_DWORD)        wdztt = gg.getResultCount()        if wdzt ~= 0 then        wd = gg.getResults(wdztt)        tmp = {}        for k, v in pairs(wd) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address +60            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1.25 then                wd[1] = tmp[k]                break            end        end        wdpy={}	    wdpy[1] = {}	    wdpy[1].address = wd[1].address + 84	    wdpy[1].flags = gg.TYPE_DWORD	    wdpy[1].value = "0"        wdpy[1].freeze = true        gg.addListItems(wdpy)        gg.clearResults()        gg.toast("无敌模式开启成功🙏🙏🙏")	    wdd=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");	    gg.toast("无敌模式关闭成功🙏🙏🙏")	    wdpy[1].freeze = false	    gg.addListItems(wdpy);	    wdd=0	endendlocal BB=0function b()    if BB~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	    -- 光翼满级        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("699",gg.TYPE_DWORD)         gg.refineNumber("699",gg.TYPE_DWORD)        gy = gg.getResultCount()        if gy ~= 0 then        gymj = gg.getResults(gy)        tmp = {}        for k, v in pairs(gymj) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 16            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 67 then                gymj[1] = tmp[k]                break            end        end        gypy={}	    gypy[1] = {}	    gypy[1].address = gymj[1].address - 32	    gypy[1].flags = gg.TYPE_DWORD	    gypy[1].value = "300"        gypy[1].freeze = true        gg.addListItems(gypy)        gg.clearResults()        gg.toast("光翼满级开启☀️☀️☀")	    BB=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	    gg.toast("光翼满级关闭☀️☀️☀️")	    gypy[1].freeze = false	    gg.addListItems(gypy); 	    BB=0	endendlocal CC=0function c()    if CC~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	gg.toast("人物加速开启🎅🎅🎅")    -- 人物加速    gg.clearResults();    gg.setRanges(8)    gg.searchNumber("-1D;3.5F::77",gg.TYPE_FLOAT)      gg.refineNumber("3.5",gg.TYPE_FLOAT)    rwjs = gg.getResults(1)    rwjs[1].flags = gg.TYPE_FLOAT	rwjs[1].value = "10"	rwjs[1].freeze = true	gg.setValues(rwjs);     gg.clearResults()	CC=1	else    biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	gg.toast("人物加速关闭🎅🎅🎅")	rwjs[1].value = "3.5"	rwjs[1].freeze = true	gg.setValues(rwjs);	CC=0	endendlocal DD=0function d()    if DD~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	gg.toast("超级跳远开启☔☔☔")    -- 超级跳远    gg.clearResults();    gg.setRanges(8)    gg.searchNumber("-1D;1F;1D::25",gg.TYPE_FLOAT)      gg.refineNumber("1",gg.TYPE_FLOAT)    cjty = gg.getResults(1)    cjty[1].flags = gg.TYPE_FLOAT	cjty[1].value = "5"	cjty[1].freeze = true	gg.setValues(cjty);     gg.clearResults()	DD=1	else    biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	gg.toast("超级跳远关闭☔☔☔")	cjty[1].value = "1"	cjty[1].freeze = true	gg.setValues(cjty);	DD=0	endendlocal HH=0function h()    if HH~=1 then    gg.alert("⚠️遇境开启⚠️") 	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	gg.toast("云朵消失开启☁️☁️☁️")    -- 云朵消失    gg.clearResults();    gg.setRanges(4)    gg.searchNumber("8",gg.TYPE_FLOAT)      gg.refineNumber("8",gg.TYPE_FLOAT)    yd = gg.getResultCount()    ydxs = gg.getResults(yd)        tmp = {}        for k, v in pairs(ydxs) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 124            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == -1.5 then                ydxs[1] = tmp[k]                break            end        end        ydpy={}	    ydpy[1] = {}	    ydpy[1].address = ydxs[1].address - 128	    ydpy[1].flags = gg.TYPE_FLOAT	    ydpy[1].value = "999"        ydpy[1].freeze = true        gg.addListItems(ydpy)        gg.clearResults()	    HH=1	else    biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	gg.toast("云朵消失关闭☁️☁️☁")    ydpy[1].value = "4"	ydpy[1].freeze = true	gg.addListItems(ydpy)	HH=0	endendlocal EE=0function e()    if EE~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");    gg.toast("全图蜡烛点燃开启🎉🎉🎉")    -- 全图蜡烛机关门点燃        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("-100",gg.TYPE_FLOAT)         gg.refineNumber("-100",gg.TYPE_FLOAT)        lzdr = gg.getResultCount()        if lzdr ~= 0 then        lz = gg.getResults(lzdr)        tmp = {}        for k, v in pairs(lz) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 272            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 20 then                lz[1] = tmp[k]                break            end        end        lzpy={}	    lzpy[1] = {}	    lzpy[1].address = lz[1].address -328	    local pianyi = {}	    for i=1,280 do	    pianyi[i] = {}       	pianyi[i].address = lzpy[1].address + i * 448    	pianyi[i].flags = gg.TYPE_FLOAT    	pianyi[i].value = "1"	    pianyi[i].freeze = true	    gg.addListItems(pianyi)        gg.clearResults()        end        end	    EE=1	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");    	gg.toast("全图蜡烛点燃关闭🎉🎉🎉")     	local pianyi = {}        for i=1,280 do	    pianyi[i] = {}	    pianyi[i].address = lzpy[1].address + i * 448	    pianyi[i].flags = gg.TYPE_FLOAT	    pianyi[i].freeze = false	    gg.addListItems(pianyi)    	end	    EE=0	endendlocal FF=0function f()    if FF~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");	 -- 全图炸花	    gg.clearResults()        gg.setRanges(4)        gg.searchNumber("54490",gg.TYPE_DWORD)         gg.refineNumber("54490",gg.TYPE_DWORD)        qtzh = gg.getResultCount()        if lzdr ~= 0 then        zhahua = gg.getResults(qtzh)        tmp = {}        for k, v in pairs(zhahua) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 8            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 657 then                zhahua[1] = tmp[k]                break            end        end        zhzhzh={}	    zhzhzh[1] = {}	    zhzhzh[1].address = zhahua[1].address + 2324	    local zh = {}        for i=1,255 do    	zh[i] = {}	    zh[i].address = zhzhzh[1].address + i * 8	    zh[i].flags = gg.TYPE_FLOAT	    zh[i].value = "0"	    zh[i].freeze = true	    gg.addListItems(zh)        gg.clearResults()	    end	    gg.toast("全图炸花开启🎈🎈🎈")        FF=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");     	gg.toast("全图炸花关闭🎈🎈🎈")	    local zh = {}        for i=1,255 do     	zh[i] = {}	    zh[i].address = zhahua[1].address + i * 8	    zh[i].flags = gg.TYPE_FLOAT	    zh[i].freeze = false    	gg.addListItems(zh)	    FF=0     	end	endendlocal GGGG=0function Candles()	gg.clearResults()	gg.setRanges(4)	gg.searchNumber("-842203136", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)	shCount = gg.getResultCount()	sh = gg.getResults(shCount)	for k, v in pairs(sh) do		v.isMatch = true	end	local shtmp = {}	for i, v in ipairs(sh) do		shtmp[#shtmp+1] = {}		shtmp[#shtmp].address = v.address - 12		shtmp[#shtmp].flags = gg.TYPE_FLOAT	end		shtmp = gg.getValues(shtmp)	for i, v in ipairs(shtmp) do		if "" .. v.value ~= "3.5" then			sh[i].isMatch = false		end	end	local shdata = {}	for i, v in ipairs(sh) do		if (v.isMatch) then    		shdata[#shdata+1] = v.address - 12		end	end	shsl = #shdata	local shqd = {}	for i = 1, shsl do		shqd[#shqd+1] = {}		shqd[#shqd].address = shdata[i]		shqd[#shqd].flags = gg.TYPE_FLOAT		shqd[#shqd].value = 9999	end	gg.setValues(shqd)	gg.toast("烛火吸收完毕，已收取 [" .. shsl .. "] 点烛火！")	gg.clearResults()endlocal zbb = 0function zbcb()    if zbb~=1 then        gg.alert("⚠️自爆与满翼不可都开启⚠️") 	    biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】");	        -- 黑人抬棺        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("256",gg.TYPE_DWORD)         gg.refineNumber("256",gg.TYPE_DWORD)        zbks = gg.getResultCount()        if zbks ~= 0 then        zbms = gg.getResults(zbks)        tmp = {}        for k, v in pairs(zbms) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address +60            tmp[#tmp].flags = gg.TYPE_FLOAT        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1.25 then                zbms[1] = tmp[k]                break            end        end        zbpy={}	    zbpy[1] = {}	    zbpy[1].address = zbms[1].address + 84	    zbpy[1].flags = gg.TYPE_DWORD	    zbpy[1].value = "1"        zbpy[1].freeze = true        gg.addListItems(zbpy)        gg.clearResults()        gg.toast("自爆模式开启成功🙏🏿🙏🏿🙏🏿")	    zbb=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】");	    gg.toast("自爆模式关闭成功🙏🏿🙏🏿🙏🏿")	    zbpy[1].freeze = false	    gg.addListItems(zbpy);	    zbb=0	endendlocal wyy = 0function wy()  if wyy~=1 then	biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	    -- 无翼可爱        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("699",gg.TYPE_DWORD)         gg.refineNumber("699",gg.TYPE_DWORD)        wuyi = gg.getResultCount()        if gy ~= 0 then        wyka = gg.getResults(wuyi)        tmp = {}        for k, v in pairs(wyka) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 16            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 67 then                wyka[1] = tmp[k]                break            end        end        wypy={}	    wypy[1] = {}	    wypy[1].address = wyka[1].address - 32	    wypy[1].flags = gg.TYPE_FLOAT	    wypy[1].value = "9"        wypy[1].freeze = true        gg.addListItems(wypy)        gg.clearResults()        gg.toast("无翼开启💗💗💗")	    wyy=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	    gg.toast("无翼关闭💗💗💗️")	    wypy[1].flags = gg.TYPE_DWORD	    wypy[1].value = "120"	    wypy[1].freeze = true	    gg.addListItems(wypy); 	    wyy=0	endendlocal ty = 0function ys()   if ty~=1 then        biao[kaiguan]=string.gsub(biao[kaiguan],"【开】","【关】")	    -- 无翼可爱        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("908",gg.TYPE_DWORD)         gg.refineNumber("908",gg.TYPE_DWORD)        yushui = gg.getResultCount()        if gy ~= 0 then        yus = gg.getResults(yushui)        tmp = {}        for k, v in pairs(yus) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address + 4            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 100 then                yus[1] = tmp[k]                break            end        end        yspy={}	    yspy[1] = {}	    yspy[1].address = yus[1].address + 56	    yspy[1].flags = gg.TYPE_FLOAT	    yspy[1].value = "0"        yspy[1].freeze = true        gg.addListItems(yspy)        gg.clearResults()        gg.toast("雨停了🐳")	    ty=1        end	else        biao[kaiguan]=string.gsub(biao[kaiguan],"【关】","【开】")	    gg.toast("取消冻结成功🌧️️")	    yspy[1].freeze = false	    gg.addListItems(yspy); 	    ty=0	endendlocal xxx = 0local yyy = 0local zzz = 0function i()G1=1PT = gg.choice({	 "云野",	 "雨林",	 "霞谷",	 "暮土",	 "禁阁",	 "返回主页",}, nil, "带人跑图模式🗺️")if PT==1 then    gg.toast("云野自动跑图开始🍓")    if xxx ~= 1 then	--云野一图    zb({115.60298156738,197.2080078125,-435.11529541016})    gg.sleep(3500)    zb({118.97437286377,197.05804443359,-431.48291015625})	gg.sleep(3500)	zb({125.53090667725,196.61488342285,-434.53515625})	gg.sleep(3500)	zb({121.2052230835,197.01617431641,-427.06924438477})	gg.sleep(3500)	zb({119.4797744751,196.49667358398,-423.55166625977})	gg.sleep(3500)	zb({78.99172210693,150.2004699707,1.78256821632})	gg.sleep(3500)	zb({58.6406211853,151.20434570312,7.38893318176})	gg.sleep(3500)	zb({102.32624053955,155.1436920166,16.21933174133})	gg.sleep(3500)	zb({81.76918029785,158.13374328613,50.05578231812})	gg.sleep(3500)	zb({144.96569824219,161.92639160156,5.63502502441})	gg.sleep(3500)	zb({27.23487663269,158.83700561523,-20.36087036133})    Candles()	gg.sleep(3500)	--云野右图	zb({-11.9019241333,164.92292785645,-3.0072016716})	gg.sleep(12000)	zb({-102.87348175049,171.93359375,56.98407363892})	gg.sleep(3500)	zb({-104.64253234863,158.45077514648,53.33500564575})	gg.sleep(3500)	zb({-145.32948303223,171.31610107422,86.34217071533})	gg.sleep(3500)	zb({-160.31233215332,157.57586669922,115.76903533936})	gg.sleep(3500)	zb({-157.09628295898,181.24993896484,110.29733276367})	gg.sleep(3500)	zb({-145.04643249515,180.54747009277,120.26123809814})	gg.sleep(3500)	zb({-157.55725097656,197.08999633789,118.56550598145})	gg.sleep(3500)	zb({-181.82606506348,189.62023925781,125.00187683105})	gg.sleep(3500)	zb({-192.41775512695,195.73463439941,86.82441711426})	gg.sleep(3500)	zb({-197.01600646973,205.75592041016,86.32865142822})	gg.sleep(3500)	zb({-198.05183410645,180.20304870605,86.42471313477})	gg.sleep(3500)	zb({-194.69427490234,178.33114624023,83.36176350049})	Candles()	gg.sleep(3500)	zb({-45.18014907837,167.0774230957,36.54417800903})	--云野左图	gg.sleep(12000)	zb({170.20217895508,163.0714263916,6.96053695679})	gg.sleep(12000)	zb({302.50225830078,188.17359924316,66.2142791748})	gg.sleep(3500)	zb({282.06405639648,196.42961120605,97.41554260254})	gg.sleep(3500)	zb({258.45153808594,199.35935974121,127.02438354492})	gg.sleep(3500)	zb({297.45776367188,181.99851989746,133.0059967041})	gg.sleep(3500)	zb({310.27359008789,181.79270935059,139.18994140625})	gg.sleep(3500)	zb({399.08645629883,181.65843200684,200.22633361816})	gg.sleep(3500)	zb({410.17614746094,186.00856018066,210.36117553711})	gg.sleep(3500)	zb({374.6262512207,181.3630065918,225.45808410645})	gg.sleep(3500)	zb({313.9404296875,188.25379943848,203.39910888672})	gg.sleep(3500)	zb({268.37118530273,193.69003295898,213.44342041016})	Candles()	gg.sleep(3500)	zb({243.67858886719,198.7829284668,228.57458496094})	gg.sleep(12000)	--云野二图	zb({88.9342956543,181.41004943848,231.95796203613})	gg.sleep(6000)	zb({99.4754486084,195.13636779785,253.24153137207})	gg.sleep(3500)	zb({92.93378448486,199.28660583496,273.75415039062})	gg.sleep(3500)	zb({95.48497009277,203.99990844727,272.60464477539})	gg.sleep(3500)	zb({98.00842285156,203.39779663086,274.16390991211})	gg.sleep(3500)	zb({90.58159637451,187.71266174316,351.65072631836})	gg.sleep(3500)	zb({65.012000946045,194.42506408691,361.20562744141})	gg.sleep(3500)	zb({67.10677337646,199.14305114746,362.57659912109})	gg.sleep(3500)	zb({65.64736938477,199.142578125,364.82284545898})	gg.sleep(3500)	zb({65.51026153564,187.55653381348,362.9114074707})	gg.sleep(3500)	zb({56.51884841919,186.13949584961,368.4674987793})	gg.sleep(3500)	zb({48.21697998047,186.23483276367,356.98342895508})	gg.sleep(3500)	zb({31.19235610962,184.72412109375,349.10522460938})	gg.sleep(3500)	zb({-11.35507583618,188.39305114746,324.89636230469})	gg.sleep(3500)	zb({-15.24630451202,192.9019317627,319.41375732422})	gg.sleep(3500)	zb({-16.35024452209,196.62608337402,318.31805419922})	gg.sleep(3500)	zb({-19.20211601257,197.23623657227,318.74365234375})    Candles()	gg.sleep(3500)	zb({-41.19258499146,183.73767089844,317.03952026367})	Candles()	gg.sleep(3500)	--云野影藏图	zb({-50.14623641968,181.75190734863,323.06060791016})	gg.sleep(12000)	zb({-15.90675163269,19.36320304871,0.04607446492})	gg.sleep(3500)	zb({-6.95440864563,20.6263217926,0.02671859413})    gg.toast("八人们打开后 再启动🍊")	xxx=1	else	zb({-26.77502822876,58.40365600586,-45.02451324463})	gg.sleep(3500)	zb({5.90445566177,39.62705993652,-2.53018903732})	gg.sleep(3500)	zb({2.32470178604,39.62628555298,-5.97694396973})	gg.sleep(3500)	zb({-2.26312303543,39.62630844116,-5.67430210114})	gg.sleep(3500)	zb({-5.90018320084,39.62672424316,-2.39154171944})	gg.sleep(3500)	zb({-6.01038551331,39.62662887573,2.48111796379})	gg.sleep(3500)	zb({-2.58554887772,39.62702941895,5.93406152725})	gg.sleep(3500)	zb({2.43038368225,39.62660598755,6.11527490616})	gg.sleep(3500)	zb({6.11024856567,39.62628555298,2.37555551529})	gg.sleep(3500)	zb({31.99162864685,42.6743812561,0.09687811881})	gg.sleep(12000)	zb({133.4786987304,250.94985961914,456.36135864258})	gg.sleep(3500)	zb({121.98816680908,254.75132751465,477.07861328125})	gg.sleep(3500)	zb({130.70057678223,255.21701049805,486.0810546875})	gg.sleep(12000)	zb({-100.09580993652,83.84275817871,43.61852264404})	gg.sleep(3500)	zb({-106.75609588623,84.60436248779,40.547335565186})	gg.sleep(3500)	zb({-109.46098327637,87.63363647461,45.55025100708})	gg.sleep(3500)	zb({-128.94709777832,75.568359375,42.68757247925})	Candles()    gg.toast("手动回遇境🍊")	xxx=0	endendif PT==2 then    gg.toast("雨林自动跑图开始🍓")    --雨林一图	zb({132.00636291504,217.58917236328,-627.18487548828})	gg.sleep(3500)	zb({132.22692871094,218.2283782959,-616.41571044922})	gg.sleep(3500)	zb({143.14457702637,219.44395446777,-606.51513671875})	gg.sleep(3500)	zb({-2.71335673332,94.98352813721,-228.54418945312})	gg.sleep(3500)	zb({18.42119979858,95.694480896,-217.98950195312})	gg.sleep(3500)	zb({20.60919570923,97.28884887695,-198.0877532959})	gg.toast("9秒内手动跳过动画🍢")	gg.sleep(9000)	zb({4.1483707428,100.23230743408,-189.62496948242})	gg.sleep(3500)	zb({26.44177627563,97.71215057373,-176.8835144043})	gg.sleep(3500)	zb({9.25449371338,98.13481903076,-154.41754150391})	gg.sleep(3500)	zb({32.01079940796,98.20777130127,-146.05264282227})	gg.sleep(3500)	zb({7.25707769364,100.0472869873,-139.33088684082})	gg.sleep(3500)	zb({15.39059448242,99.52299499512,-132.5378112793})	gg.sleep(3500)	zb({30.70701217651,99.8190536499,-132.4546661377})	gg.sleep(3500)	Candles()	zb({28.63400840759,98.6180267334,-118.03186035156})	--雨林二图	gg.sleep(3500)	zb({30.37040519714,98.88845825195,-109.27439880371})	gg.sleep(12000)	zb({27.41429328918,99.99300384521,-106.8138809204})	gg.sleep(3500)	zb({30.33293151855,106.13107299805,-71.55737304688})	gg.sleep(3500)	zb({15.90950489044,106.37357330322,-66.79668426514})	gg.sleep(3500)	zb({40.35590362549,98.17053222656,-45.0782661438})	gg.sleep(3500)	zb({24.79768943787,117.84935760498,-26.76824378967})	gg.sleep(3500)	zb({38.6798286438,105.24387359619,-2.9914047718})	gg.sleep(3500)	zb({54.22513580322,97.78234863281,-3.40694475174})	gg.sleep(3500)	zb({45.4478225708,96.54899597168,-3.13172483444})	gg.sleep(3500)	zb({38.43868255615,96.54707336426,-10.66464424133})	gg.sleep(3500)	zb({63.35177612305,96.96760559082,10.86319732666})	gg.sleep(3500)	zb({50.89640045166,102.59790039062,30.10159301758})	gg.sleep(3500)	zb({64.74167633057,100.17140197754,49.37391662598})	gg.sleep(3500)	zb({77.50698852539,97.13687896729,29.4581489563})	gg.sleep(3500)	zb({91.65512084961,99.29676818848,34.40578079224})	gg.sleep(3500)	zb({81.5911026001,103.39978027344,18.78395843506})	gg.sleep(3500)	zb({89.04072570801,99.73249816895,-29.41781997681})	gg.sleep(3500)	zb({67.91477203369,106.90495300293,-52.28639602661})	gg.sleep(3500)	zb({107.14709472656,112.42742156982,-48.92885971069})	gg.sleep(3500)	zb({70.78517913818,107.56037902832,-62.12035369873})	gg.sleep(3500)	zb({97.99615478516,112.56428527832,-102.44512939453})    Candles()	gg.sleep(3500)	zb({68.61032104492,107.42108917236,-90.46832275391})	--雨林隐藏图1	gg.sleep(3500)	zb({-2.42549586296,111.49240112305,-52.30210113525})	gg.sleep(12000)	zb({13.92667865753,83.74536132812,-57.26467132568})	gg.sleep(3500)	zb({-2.3912832737,85.3596496582,-50.60078048706})	gg.sleep(3500)	zb({-16.08317375183,85.39809417725,-32.63803100586})	gg.sleep(3500)	zb({-8.14448833466,84.73457336426,-7.89531230927})	gg.sleep(3500)    zb({-1.13187742233,84.98815155029,-12.17042732239})	gg.sleep(3500)	zb({7.94176197052,92.88522338867,6.60753107071})	gg.sleep(3500)	zb({-29.21605491638,95.50507354736,15.272564888})	gg.sleep(3500)	Candles()	zb({-17.57136535645,96.20481872559,21.40295791626})	--雨林隐藏图2	gg.sleep(3500)	zb({54.33259963989,56.22098922729,44.24211502075})	gg.sleep(12000)	zb({63.93209457397,78.76077270508,-282.17562866211})	gg.sleep(3500)	zb({61.18431472778,80.60235595703,-284.86975097656})	gg.sleep(3500)	zb({64.88576507568,79.76458740234,-288.55004882812})	gg.sleep(3500)	zb({2.15540909767,121.2936630249,-365.80477905273})	gg.sleep(3500)	zb({-38.06717300415,132.30741882324,-197.39756774902})	gg.sleep(3500)	zb({-35.30477905273,132.96231079102,-193.10319519043})	gg.sleep(3500)	Candles()	zb({-54.95386505127,132.33648681641,-198.46984863281})	--雨林中转	gg.sleep(3500)	zb({-59.19394302368,210.49002075195,-283.56454467773})	gg.sleep(12000)	zb({0.31548553705,90.00939941406,72.516456604})	gg.sleep(3500)	zb({5.0689702034,90.26519012451,68.48607635498})	gg.sleep(3500)	zb({15.98097038269,88.75833892822,98.15411376953})	--雨林三图	gg.sleep(3500)	zb({16.3238658905,88.25741577148,124.13977050781})	gg.sleep(20000)	zb({-79.92333984375,153.36772155762,154.53463745117})	gg.sleep(3500)	zb({-73.72756958008,134.62478637695,176.23023986816})	gg.sleep(3500)	zb({-83.33684539795,134.74411010742,213.68826293945})	gg.sleep(3500)	zb({-94.00321960449,136.26892089844,225.59622192383})	gg.sleep(3500)	zb({-75.43740081787,134.71807861328,231.26933288574})	gg.sleep(3500)	zb({-69.64479064941,144.39186096191,228.44799804688})	gg.sleep(3500)	zb({-64.05876159668,143.58644104004,220.79084777832})	gg.sleep(3500)	zb({-49.71687316895,134.75036621094,223.28747558594})	gg.sleep(3500)	zb({-35.54241943359,137.19285583496,159.83674621582})	gg.sleep(3500)	zb({-16.83688735962,134.67930603027,165.29678344727})	gg.sleep(3500)	zb({-10.21327877045,134.76959228516,138.92083740234})	gg.sleep(3500)	zb({-6.37375116348,138.80084228516,110.69288635254})	gg.sleep(3500)	zb({-11.09886646271,138.50883483887,86.38436889648})	gg.sleep(3500)	zb({22.05228424072,140.27615356445,11.05105304718})	gg.sleep(3500)	zb({45.14354324341,145.53717041016,53.00225830078})	gg.sleep(3500)	zb({52.08951187134,144.65481567383,72.5608215332})	gg.sleep(3500)	zb({72.98959350586,146.37847900391,134.75663757324})	gg.sleep(3500)	zb({118.52641296387,164.81806945801,157.97132873535})	gg.sleep(3500)	zb({48.06265640259,135.30081176758,218.61390686035})	gg.sleep(3500)	zb({25.38379096985,135.10757446289,220.52201843262})	gg.sleep(3500)	zb({3.95169067383,137.30879211426,194.00357055664})	gg.sleep(3500)	zb({-21.14779853821,134.70893859863,199.55110168457})	gg.sleep(3500)	zb({-22.45495223999,135.13790893555,222.07760620117})	gg.sleep(3500)	zb({-22.48716545105,140.5375213623,247.89054870605})    Candles()	--雨林终点	gg.sleep(3500)	zb({-17.19787025452,182.95243835449,403.08895874023})	gg.sleep(12000)	zb({6.51100826263,104.87572479248,-11.67045783997})	gg.sleep(3500)	zb({15.96475696564,110.62584686279,-16.04157447815})	gg.sleep(3500)	zb({-16.87840843201,104.87336730957,-5.16422128677})	gg.sleep(3500)	zb({-13.47823810577,104.87596130371,7.01203155518})	gg.sleep(3500)	zb({-7.82540941238,108.40357971191,68.83112335205})	gg.sleep(3500)	zb({8.53291988373,110.02577972412,70.07482910156})	gg.sleep(3500)	zb({13.52785778046,108.70034790039,77.95269775391})	gg.sleep(3500)	zb({-10.54486942291,108.91596221924,97.63005065918})	gg.sleep(3500)	zb({0.11613775045,106.91246032715,96.4351272583})    gg.toast("手动回遇境🍊")endif PT==3 then    if yyy ~= 1 then    gg.toast("霞谷主干道跑图开始🍓")   	--峡谷一图	zb({-44.12378311157,306.01348876953,23.13875961304})	gg.sleep(3500)	zb({-31.74607086182,306.10690307617,1.97219336033})	gg.sleep(3500)	zb({-126.67539215088,267.88735961914,-110.97894287109})	gg.sleep(3500)	zb({-103.04829406738,260.23236083984,-118.17642974854})	gg.sleep(3500)	zb({-92.92546081543,255.66632080078,-149.84927368164})	gg.sleep(3500)	zb({-99.74283599854,251.56791687012,-166.01132202148})	gg.sleep(3500)	zb({-102.09551239014,249.91656494141,-172.96983337402})	gg.sleep(3500)	zb({-105.04325866699,248.44064331055,-179.64167785645})	gg.sleep(3500)	zb({-108.12476348877,246.900390625,-186.86201477051})	gg.sleep(3500)	zb({-111.04677581787,245.32696533203,-194.20146179199})	gg.sleep(3500)	zb({-121.54612731934,240.10643005371,-222.98414611816})	gg.sleep(3500)	zb({-150.10296630859,227.3816986084,-226.3929901123})	gg.sleep(3500)	zb({-135.14601135254,198.65240478516,-332.60443115234})	gg.sleep(3500)	zb({-64.75140380859,125.15168762207,-449.45642089844})	gg.sleep(3500)	zb({10.55853366852,87.58947753906,-454.77020263672})	gg.sleep(3500)	zb({67.66337585449,75.52090454102,-478.75341796875})	gg.sleep(3500)	zb({94.08749389648,72.73916625977,-489.95175170898})	gg.sleep(3500)	zb({158.07543945312,75.82615661621,-446.68124389648})	gg.sleep(3500)	zb({186.00759887695,48.03629684448,-525.98504638672})	gg.sleep(3500)	zb({172.03317260742,44.65506744385,-486.58297729492})	gg.sleep(3500)	zb({221.00025939941,44.74003219604,-516.30548095703})	gg.sleep(3500)	zb({220.02799987793,44.73042678833,-521.92736816406})	gg.sleep(3500)	zb({189.71067810059,44.84695053101,-546.39874267578})	gg.sleep(3500)    Candles()	zb({185.78855895996,44.91770172119,-547.43212890625})	--峡谷左二图	gg.sleep(3500)	zb({223.6668548584,65.62539672852,-629.39367675781})	gg.sleep(12000)	zb({26.301200056458,454.86239624023,176.21231079102})	gg.sleep(3500)	zb({114.96937561035,477.28637695312,15.91835689545})	gg.sleep(3500)	zb({98.66351318359,472.3896484375,0.81318873167})	gg.sleep(3500)	zb({79.4423828125,480.72006225586,24.37182998657})	gg.sleep(3500)	zb({18.01672363281,507.2067565918,-4.52004051208})	gg.sleep(3500)	zb({26.84756088257,530.70483398438,-38.68095779419})	gg.sleep(3500)	zb({95.10320281982,560.63580322266,-47.5903968811})	gg.sleep(3500)	zb({105.93483734131,558.57275390628,-37.62168121338})	gg.sleep(3500)	zb({113.02637481689,534.58575439453,-27.6976852417})	gg.sleep(3500)	zb({92.42867279053,530.98199462891,-50.72128295898})	gg.sleep(3500)	zb({112.46508026123,474.00286865234,-68.04123687744})	gg.sleep(3500)	zb({129.54693603516,478.78283691406,-71.76959228516})	gg.sleep(3500)	zb({105.516746521,478.78231811523,-90.7293548584})	gg.sleep(3500)	zb({122.75747680664,480.65939331055,-114.1725692749})	gg.sleep(3500)	zb({142.99169921875,480.65942382812,-98.38182067871})	gg.sleep(3500)	zb({156.11929321289,485.65502929688,-120.72505187988})	gg.sleep(3500)	zb({140.41232299805,485.6552734375,-131.97975158691})	gg.sleep(3500)	zb({155.41200256348,495.31036376953,-158.84375})    Candles()	gg.sleep(3500)	zb({174.82008361816,495.25396728516,-144.0052947998})	--峡谷左赛道	gg.sleep(3500)	zb({205.42976379395,491.84970092773,-203.36633300781})	gg.sleep(12000)	zb({192.87881469727,1187.60620117188,393.19818115234})	gg.sleep(3500)	zb({188.40533447266,1187.22436523438,392.33361816406})	gg.sleep(3500)	zb({183.3757019043,1187.22448730469,391.44891357422})	gg.sleep(3500)	zb({178.79174804688,1187.2255859375,390.28259277344})	gg.sleep(3500)	zb({173.68061828613,1187.22436523433,388.91067504883})	gg.sleep(3500)	zb({189.56620788574,1187.22448730469,406.92791748047})	gg.sleep(3500)	zb({184.89176940918,1187.24682617188,406.24502563477})	gg.sleep(3500)	zb({180.40858459473,1187.22583007812,405.12847900391})	gg.sleep(3500)	zb({175.58976745605,1187.228515625,403.9704284668})	gg.sleep(3500)	zb({170.52285766602,1187.23022460938,402.84414672852})    gg.toast("请手动打坐 50秒倒计时瞬移🌝🌝")	gg.sleep(40000)	zb({-269.3837890625,1172.09167480469,286.34552001953})	gg.sleep(3500)	zb({153.6636505127,999.330078125,-96.28460693359})	gg.sleep(12000)	zb({44.09857940674,169.2801361084,11.14154911041})	gg.sleep(3500)	zb({57.88538742065,133.83950805664,-214.03375244141})    gg.toast("倒计时35秒领取蜡烛🍣")	gg.sleep(35000)    zb({36.63426208496,135.61135864258,-221.3716583252})	gg.sleep(3500)	zb({79.22841644287,135.61253356934,-218.13696289062})	gg.sleep(3500)	zb({55.8957901001,135.11459350586,-259.83737182617})	gg.sleep(3500)	zb({63.43298721313,136.50849914551,-263.92175292969})	--峡谷终点	gg.sleep(3500)	zb({61.42583465576,138.1378326416,-293.04681396484})	gg.sleep(12000)	zb({-30.55983161926,140.14796447754,-150.14045715332})	gg.sleep(3500)	zb({-19.65181922913,153.76843261719,-127.14723968506})	gg.sleep(3500)	zb({-11.21016025543,153.77114868164,-118.03510284424})	gg.sleep(3500)	zb({-30.43489646912,147.18525695801,-151.55996704102})	gg.sleep(3500)	zb({9.29844284058,141.3869934082,-186.97894287109})	gg.sleep(3500)	zb({9.3048658371,141.38584899902,-190.43496704102})	Candles()    gg.toast("隐藏图回遇境再次启动🍊")	yyy=1	else    gg.toast("霞谷隐藏图跑图开始🍓")	--峡谷一图~右赛道	zb({197.15872192383,48.49141693115,-516.93634033203})	gg.sleep(3500)	zb({291.46752929688,39.44458770752,-528.46527099609})    gg.toast("请手动打坐 40秒倒计时瞬移🌝🌝")	gg.sleep(40000)	zb({158.32211303711,852.73541259766,475.7946472168})	gg.sleep(3500)	zb({259.29107666016,586.7119140625,-571.33093261719})	gg.sleep(12000)	zb({50.4543800354,159.39141845703,-31.0505657196})	gg.sleep(3500)	zb({57.88567733765,133.83946228027,-214.03512573242})	Candles()    gg.sleep(2000)    gg.toast("手动回遇境🍊")	yyy=0	endendif PT==4 then    if zzz ~= 1 then    gg.toast("墓土主干道跑图开始🍓")	--墓土一图	Candles()	zb({-70.22785186768,66.49369049072,-759.26147460938})	gg.sleep(3500)	zb({-97.79056549072,63.48319244385,-790.15093994141})	gg.sleep(3500)	zb({-139.69577026367,62.95037841797,-797.40356445312})    gg.toast("40秒瞬移倒计时🌝🌝")	--20秒降落	gg.sleep(40000)	zb({8.60825634003,0.75030183792,301.68978881836})	gg.sleep(1500)	zb({-3.99469828606,0.37560066581,296.41793823242})	gg.sleep(1500)	zb({32.28802490234,0.37636706233,235.99894714355})	gg.sleep(3500)	zb({-31.64685821533,2.1539618969,243.37582397461})	gg.sleep(1500)	zb({-29.39075088501,2.01477503777,238.9172668457})	gg.sleep(1500)	zb({-28.72294616699,1.20552659035,235.2751159668})	gg.sleep(1500)	zb({-26.15162849426,0.88573569059,214.15827941895})	gg.sleep(1500)	zb({-92.274269104,2.31374073029,327.30935668945})	gg.sleep(1500)	zb({-59.85810852051,1.15041458607,232.35001220703})	gg.sleep(1500)	zb({-56.83233642578,0.57013261318,226.86643981934})	gg.sleep(1500)	zb({-54.00981140137,1.15105247498,220.69749450684})    Candles()	gg.sleep(3500)	zb({-80.39521026611,9.19505214691,164.20509338379})	--墓土二图	gg.sleep(4500)	zb({-94.89070892334,12.30350045013,156.4560546875})	gg.sleep(12000)	zb({68.90135955811,90.94641113281,258.72088623047})	gg.sleep(3500)	zb({44.20020294189,89.84394836426,227.9577331543})	gg.sleep(3500)	zb({51.45596694946,99.28791809082,155.04475402832})	gg.sleep(3500)    zb({47.12553787231,93.69466400146,142.97381591797})	gg.sleep(3500)	zb({34.81157302856,93.70342254639,139.69458007812})	gg.sleep(3500)	zb({40.4489440918,95.20787811279,120.91116333008})	gg.sleep(3500)	zb({63.86231231689,66.71259307861,-15.30156612396})	gg.sleep(3500)	zb({48.4670715332,69.82891845703,-59.96273803711})	gg.sleep(3500)	zb({84.73511505127,64.37671661377,-99.42739105225})	gg.sleep(3500)	zb({8.32419109344,78.00788116455,-142.94731140137})	gg.sleep(3500)	zb({-5.35853862762,82.17987060547,-123.11887359619})	gg.sleep(3500)	zb({-7.18160104752,85.37297821045,-126.04454040527})	gg.sleep(3500)	zb({-8.05536174774,86.23159790039,-128.71955871582})	gg.sleep(3500)	zb({0.74927788973,89.12622833252,-134.57244873047})	gg.sleep(3500)	zb({45.10829544067,82.42629241943,-132.66519165039})	gg.sleep(3500)	zb({71.19222259521,69.28861999512,-157.12396240234})	gg.sleep(3500)	zb({37.28358078003,69.23686218262,-213.30883789062})    Candles()	gg.sleep(3500)	zb({39.11396026611,71.32260131836,-221.57130432129})	--墓土沉船图	gg.sleep(3500)	zb({192.79643249512,68.40534210205,-72.22341156006})	gg.sleep(18000)	zb({-179.61277770996,4.36869573593,492.37521362305})	gg.sleep(3500)	zb({-188.01779174805,2.03948664665,476.74789428711})	gg.sleep(3500)	zb({-201.84712219238,0.914894104,432.59393310547})	gg.sleep(3500)	zb({-132.09101867676,4.07177019119,416.7109375})	gg.sleep(3500)	zb({-159.04856872559,0.37696796656,376.98382568359})	gg.sleep(3500)	zb({-162.26022338867,7.22910165787,357.97021484375})	gg.sleep(3500)	zb({-170.01536560059,11.28509044647,367.14947509766})	gg.sleep(3500)	zb({-187.97894287109,1.05554842949,403.07879638672})	gg.sleep(3500)	zb({-268.81576538086,5.68651103973,428.91809082031})	gg.sleep(3500)	zb({-267.75576782227,6.6842880249,423.20504760742})	gg.sleep(3500)	zb({-274.10137939453,11.81196689606,424.94036865234})	gg.sleep(3500)	zb({-289.75094604492,18.6405544281,419.79876708984})    Candles()	gg.sleep(3500)	zb({-288.99273681641,29.45294952393,405.53567504883})	--墓土四龙图	gg.sleep(3500)	zb({-346.98251342773,35.15969085693,384.67120361328})	gg.sleep(15000)	zb({-49.32916259766,104.83728027344,-77.6501159668})	gg.sleep(3500)	zb({-188.12129211426,121.73218536377,-169.35525512695})	gg.sleep(3500)	zb({-212.97743225098,131.00276184082,-167.36408996582})	gg.sleep(3500)	zb({-213.3311920166,140.81796264648,-163.50823974609})	gg.sleep(3500)	zb({-244.87803649902,118.97737884521,-153.44711303711})	gg.sleep(3500)	zb({-228.24075317383,102.52364349365,-183.68463134766})	gg.sleep(3500)	zb({-249.65034484863,100.38004302979,-196.02241516113})	gg.sleep(3500)	zb({-231.17218017578,100.37832641602,-229.30694580078})	gg.sleep(3500)	zb({-217.93591308594,104.36611938477,-242.26356506348})	gg.sleep(3500)	zb({-237.78598022461,96.26966094971,-285.71334838867})	gg.sleep(3500)	zb({-207.85675048828,96.69178771973,-305.19158935547})	gg.sleep(3500)	zb({-225.3459777832,83.58068084717,-363.93365478516})	gg.sleep(3500)	zb({-275.20642089844,84.91905975342,-338.89965820312})	Candles()	gg.sleep(3500)	zb({-270.44323730469,88.63068389893,-368.12487792969})	--墓土终点	gg.sleep(3500)	zb({-287.76065063477,93.07566833496,-405.00946044922})	gg.sleep(12000)	zb({-4.3422498703,207.22552490234,-1.61182498932})	gg.sleep(3500)	zb({4.53664827347,207.20820617676,-1.94537377357})	gg.sleep(3500)	zb({-0.39730292559,207.41523742676,-6.12582874298})	Candles()    gg.toast("隐藏图回遇境再次启动🍊")	zzz=1	else    gg.toast("墓土隐藏图跑图开始🍓")	--墓土螃蟹岛	zb({-139.69577026367,62.95037841797,-797.40356445312})    gg.toast("40秒瞬移倒计时🌝🌝")	gg.sleep(40000)	zb({151.11950683594,1.19466686249,46.83893966675})    gg.toast("请手动打坐 85秒开船倒计时瞬移🌝🌝")	gg.sleep(85000)	zb({105.68017578125,116.20708465576,462.01690673828})	gg.sleep(3500)	zb({78.25351715088,109.60757446289,485.55395507812})	gg.sleep(3500)	zb({42.22459411621,108.95956420898,501.55215454102})	gg.sleep(3500)	zb({79.46577453613,108.4411621094,523.63012695312})	gg.sleep(3500)	zb({280.42666625977,115.15145111084,513.50421142578})	gg.sleep(3500)	zb({300.71304321289,122.5364151001,522.43548583984})	gg.sleep(3500)	zb({302.32046508789,120.71385955811,544.26470947266})	gg.sleep(3500)	zb({330.21633911133,120.46535491943,557.35083007812})	gg.sleep(3500)	zb({281.56735229492,103.83702087402,363.01419067383})	gg.sleep(3500)	zb({284.81094360352,102.84635162354,346.02285766602})	gg.sleep(3500)	zb({303.26889038086,113.46236419678,349.53405761719})	gg.sleep(3500)	zb({287.11633300781,120.31791687012,352.26409912109})    Candles()    gg.sleep(2000)    gg.toast("手动回遇境🍊")	zzz=0	endendif PT==5 then    gg.toast("禁阁跑图开始🍓")	--禁阁影藏图	zb({-43.31412124634,39.20034408569,-97.93517303467})	gg.sleep(12000)	zb({50.03171539307,541.80670166016,26.13645362854})	gg.sleep(3500)	zb({69.59448242188,541.40093994141,27.65027618408})	gg.sleep(3500)	zb({72.85754394531,565.47186279297,-17.47369194031})	gg.sleep(3500)	zb({76.08060455322,563.00994873047,-23.10515213013})	gg.sleep(3500)	zb({72.93733978271,565.47320556641,-31.49273681641})	gg.sleep(3500)	zb({61.79039001465,551.71429443359,-37.71782302856})	gg.sleep(3500)	zb({75.95713043213,552.21374511719,-13.3358745575})	gg.sleep(3500)	zb({56.93070602417,552.21441650391,-18.62998008728})	gg.sleep(3500)	zb({61.66952896118,543.85046386719,-41.39209368545})	gg.sleep(3500)	zb({54.76568603516,543.84802246094,-41.38636779785})	gg.sleep(3500)	zb({78.69750976562,554.70959472656,-31.58866119385})	gg.sleep(3500)	zb({85.27835083008,554.71136474609,-31.59345626831})    Candles()	gg.sleep(3500)	zb({76.20945739746,541.38464355469,-10.92284202576})	--禁阁一层	gg.sleep(3500)	zb({40.35205459595,541.86962890625,-25.08329963684})	gg.sleep(12000)	zb({28.26111793518,37.39163208008,-134.52861022949})	gg.sleep(3500)	zb({34.28949356079,42.328956604,-118.72557830811})	gg.sleep(3500)	zb({38.79634094238,47.1720123291,-126.31859588623})	gg.sleep(3500)	zb({31.71107292175,47.16427230835,-137.21899414062})	gg.sleep(3500)	zb({6.91684961319,37.764503479,-70.84230041504})	gg.sleep(3500)	zb({-5.76319360733,40.401512146,-32.668384552})	gg.sleep(3500)	zb({-21.63892555237,42.0424041748,-1.71010291576})	gg.sleep(3500)	zb({-46.57090377808,40.40052032471,-16.48282623291})	gg.sleep(3500)	zb({-62.28732681274,41.82263183594,-12.90044879913})	gg.sleep(3500)	Candles()	zb({-60.73867034912,41.10559463501,22.90926742554})	--禁阁二层	gg.sleep(3500)	zb({21.35787582397,79.29556274414,6.68214130402})	gg.sleep(3500)	zb({11.27268409729,82.20293426514,21.91019821167})	gg.sleep(3500)	zb({19.32908248901,82.73078155518,19.42357254028})	gg.sleep(3500)	zb({40.81945800781,83.96297454834,38.4188079834})	gg.sleep(3500)	Candles()	zb({23.88597106934,83.90636444092,48.79845809937})	--禁阁三层	gg.sleep(3500)	zb({-0.1043953374,214.60452270508,2.59286475182})	gg.sleep(12000)	zb({-16.05261611938,164.30964660645,-48.09916687012})	gg.sleep(3500)	zb({24.78944969177,148.55657958984,34.13998031616})	gg.sleep(3500)	Candles()	zb({-38.91857528687,129.68870544434,9.5477372158})	--禁阁五层	gg.sleep(3500)	zb({-5.22235155106,294.52462768555,-0.12603969872})	gg.sleep(3500)	zb({3.71660423279,294.91845703125,2.12295842171})	gg.sleep(3500)	zb({-3.01484441757,295.54183959961,6.47273492813})	gg.sleep(3500)	zb({6.21425771713,302.41970825195,47.98390579224})	gg.sleep(3500)	zb({-10.96362018585,307.49496459961,58.38714599609})	gg.sleep(3500)	zb({-1.83383011818,304.40658569336,58.78987121582})	gg.sleep(3500)	zb({9.81625366211,306.41543579102,56.92166137695})	gg.sleep(3500)	zb({0.25948709249,309.75799560547,68.38743591309})	gg.sleep(3500)	zb({8.72283935547,303.875,51.66994857788})	Candles()    gg.toast("手动回遇境🍊")endif PT==6 then    Main()endendfunction j()G2=1SQ = gg.choice({	 "云野",	 "雨林",	 "霞谷",	 "暮土",	 "禁阁",	 "返回主页",}, nil, "独狼跑图模式🐺🐺🐺")if SQ==1 then    gg.toast("云野跑图开始🍓")	zb({115.11743927002,198.37284851074,-412.91702270508})    gg.sleep(1500)	zb({82.30505371094,155.05268859863,19.00763320923})    -- 当前图吸收烛光	Candles()    gg.sleep(5000)	zb({-13.36223697662,164.1151428227,-3.93698263168})    gg.sleep(2000)    zb({-107.2660446167,172.1589050293,57.54264450073})	gg.sleep(2000)    zb({-147.8744354248,180.35134887695,111.60083770752})    gg.sleep(1500)    zb({-191.30493164062,194.12046813965,92.28816986084})	-- 当前图吸收烛光	Candles()    gg.sleep(3000)    zb({-47.11139678955,179.24996948242,36.90230560303})	gg.sleep(6000)    zb({171.28395080566,163.02391052246,6.9861369133})	gg.sleep(6000)    zb({281.03967285156,203.85572814941,118.18124389648})	gg.sleep(1500)    zb({394.80178833008,180.8814239502,208.9743347168})	gg.sleep(1500)    zb({271.46618652344,192.82070922852,205.6898651123})	-- 当前图吸收烛光	Candles()    gg.sleep(3000)    zb({244.32598876953,197.86904907227,228.06080627441})    gg.sleep(5000)    zb({89.51289245605,198.62976074219,268.43621826172})    gg.sleep(1500)    zb({69.03224182129,192.38856506348,354.64413452148})    gg.sleep(1500)    zb({-10.87873077393,192.04830932617,315.67645263672})    gg.sleep(1500)    zb({121.45398712158,255.07366943359,467.25061035156})	-- 当前图吸收烛光	Candles()    gg.sleep(3000)    zb({131.30647277832,255.10313415527,486.70895385742})	gg.sleep(5000)    zb({-115.13949584961,92.06437683105,42.18388748169})    -- 当前图吸收烛光	Candles()	gg.toast("请手动回遇境💙")endif SQ==2 then    gg.toast("雨林跑图开始🍓")    zb({130.75828552246,224.34687805176,-602.71795654297})	gg.sleep(1500)    zb({14.43241500854,97.69249725342,-218.88102722168})	-- 当前图吸收烛光	Candles()    gg.sleep(3500)    zb({14.76787853241,94.86846923828,-187.47811889648})	gg.sleep(1500)    zb({23.47234535217,97.78204345703,-133.36102294922})	-- 当前图吸收烛光	Candles()    gg.sleep(5000)    zb({30.37040519714,98.88845825195,-109.27439880371})    gg.sleep(5000)    zb({31.5622253418,100.01309204102,-103.3267364502})    gg.sleep(1500)    zb({26.11565208435,103.0054397583,-82.32592773438})    -- 当前图吸收烛光    Candles()    gg.sleep(3500)    zb({80.05570983887,107.88425445557,-96.13883972168})	gg.sleep(1500)    zb({93.87911224365,110.7958984375,-52.62438583374})    gg.sleep(1500)    zb({74.68232727051,98.61708831787,-17.40866279602})    gg.sleep(1500)    zb({47.92622375488,104.16135406494,6.3690123558})    gg.sleep(1500)    zb({67.58702087402,98.89938409424,33.17612075806})	-- 当前图吸收烛光    Candles()    gg.sleep(5000)    zb({66.40958404541,101.3518371582,57.84840011597})    gg.sleep(5000)    zb({-86.91445159912,142.59028625488,177.07545471191})	gg.sleep(1500)    zb({-74.32703399658,144.21041870117,223.14186096191})	gg.sleep(1500)    zb({-9.88118457794,135.65356445312,155.92399597168})    gg.sleep(1500)    zb({-2.02398014069,137.56015014648,94.08730316162})    gg.sleep(1500)    zb({36.42116928101,140.1411895752,34.71224212646})    gg.sleep(1500)    zb({84.40836334229,145.81631469727,159.82514953616})    gg.sleep(1500)    zb({-22.81835746765,151.38169433594,222.27349853516})	-- 当前图吸收烛光    Candles()    gg.sleep(5000)    zb({-16.83828544617,182.94024658203,402.96005249023})	gg.sleep(5000)    zb({-0.08104625344,115.99523162842,-2.72330307961})	-- 当前图吸收烛光	Candles()    gg.sleep(3500)    zb({2.57387018204,107.53649902344,79.84284973145})    -- 当前图吸收烛光	Candles()	gg.toast("请手动回遇境💙")endif SQ==3 then    gg.toast("峡谷跑图开始🍓")    -- 当前图吸收烛光	Candles()	gg.sleep(3000)    zb({178.09007263184,49.29264450073,-515.06256103516})	gg.sleep(1500)    -- 当前图吸收烛光	Candles()    gg.sleep(3500)    zb({223.56391906738,66.52805328369,-629.701171875})	gg.sleep(1500)    zb({39.10639572144,465.65176391602,150.25552368164})	gg.sleep(1500)    zb({95.01110076904,560.63580322266,-47.59596633911})    -- 当前图吸收烛光	Candles()    gg.sleep(5000)    zb({205.75561523438,491.8512878418,-204.55242919922})	gg.sleep(5000)	-- 当前图吸收烛光	Candles()    gg.sleep(5000)    zb({-87.75131988525,1175.64123535156,362.62036132812})	gg.sleep(1500)    zb({154.0153503418,1011.15362548828,-97.60314178467})	gg.sleep(5000)    zb({57.89561843872,133.83949279785,-214.00402832031})	-- 当前图吸收烛光	Candles()    gg.sleep(3500)    zb({60.56647491455,138.13330078125,-293.24880981445})	gg.sleep(5000)    zb({-28.79566764832,140.62512207031,-144.80619812012})	gg.sleep(1500)    zb({-10.99517059326,153.76098632812,-123.88345336914})    gg.sleep(1500)    zb({9.05787944794,146.13987731934,-188.91961669922})    -- 当前图吸收烛光	Candles()	gg.toast("请手动回遇境💙")endif SQ==4 then	gg.toast("暮土跑图开始🍓") 	-- 当前图吸收烛光	Candles()	gg.sleep(3500)    zb({-136.86598205566,59.69040298462,-798.71264648438})	gg.sleep(20000)    zb({3.75268936157,2.02050471306,302.74490356445})	gg.sleep(1500)       zb({39.57469558716,1.18943119049,231.70831298828})    gg.sleep(1500)    	zb({-19.4671421051,1.61124813557,220.27662658691})	gg.sleep(1500)   	zb({-45.26943969727,2.59516334534,220.30529785156})	gg.sleep(1500)     zb({-79.40332794189,4.3054728508,326.60189819336})	gg.sleep(1500)	zb({-83.4979019165,10.33677768707,161.88903808594})	gg.sleep(1500)  	-- 当前图吸收烛光	Candles()	gg.sleep(5000)    zb({-93.44805145264,12.25340080261,157.10000610352})	gg.sleep(5000)	zb({66.47315979004,91.47152709961,258.93222045898})	gg.sleep(1500)     zb({59.91714859009,99.28720092773,153.49264526367})	gg.sleep(1500)      zb({53.15424346924,99.28839874268,130.21598815918})	gg.sleep(1500)      -- 当前图吸收烛光	Candles()	gg.sleep(5000)    zb({64.62148284912,66.90205383301,-17.39302253723})	gg.sleep(1500)      zb({49.07418823242,69.87921142578,-61.32640457153})	gg.sleep(1500)       zb({84.39138031006,64.37548065186,-99.65833282471})	gg.sleep(1500)       zb({72.75804901123,68.82402038574,-154.62091064453})	gg.sleep(1500)      zb({7.30580329895,77.96953582764,-134.8207244873})	gg.sleep(1500)  	zb({31.65027999878,71.3992767334,-222.2785949707})	gg.sleep(1500)       -- 当前图吸收烛光	Candles()	gg.sleep(5000)    zb({33.59671020508,78.84104919434,-254.92140197754})    gg.sleep(5000)    zb({-48.6858215332,104.34170532227,-79.04187774658})	gg.sleep(1500)	zb({-198.5791015625,126.42858123779,-167.11233520508})    gg.sleep(1500)      zb({-245.23553466797,118.84942626953,-154.31811523438})    gg.sleep(1500)      zb({-241.96951293945,102.78507995605,-201.89422607422})	gg.sleep(1500)       zb({-231.89678955078,101.1646194458,-228.68255615234})	gg.sleep(1500)       zb({-238.2059173584,96.32413482666,-286.48190307617})	gg.sleep(1500)  	zb({-274.05374109375,84.92595672607,-340.15267944336})	gg.sleep(1500)  	zb({-226.27702331543,83.49276733398,-363.69110107422})    gg.sleep(1500)    zb({-270.02545166016,90.63471984863,-376.97351074219})	gg.sleep(1500)	-- 当前图吸收烛光	Candles()	gg.sleep(3000)	zb({-287.76065063477,93.07566833496,-405.00946044922})	gg.sleep(5000)    Candles()	gg.toast("请手动回遇境💙")endif SQ==5 then	gg.toast("禁阁跑图开始🍓")    --禁阁影藏图	zb({-43.31412124634,39.20034408569,-97.93517303467})	gg.toast("没进去就挪动一下🦀🦀")	gg.sleep(12000)    -- 当前图吸收烛光	Candles()    gg.sleep(3000)    zb({40.35205459595,541.86962890625,-25.08329963684})	gg.sleep(5000)    Candles()    gg.sleep(3000)    zb({-0.1043953374,214.60452270508,2.59286475182})	gg.sleep(12000)    Candles()	gg.toast("请手动回遇境💙")endif SQ==6 then    Main()endendfunction cdsy()G3=1SN = gg.choice({	 "晨岛🐶",	 "云野🐷",	 "雨林🐼",	 "峡谷🐮",	 "暮土🐰",	 "禁阁🦊",	 "暴风眼🌪️",	 "返回主页🌱",}, nil, "彩蛋系列🌈")if SN==1 then	 cdsycd()endif SN==2 then	 cdsyyy()endif SN==3 then	 cdsyyl()endif SN==4 then	 cdsyxg()endif SN==5 then	 cdsymt()endif SN==6 then	 cdsyjg()endif SN==7 then	 cdsybfy()endif SN==8 then	 Main()endendfunction cdsycd()CD = gg.choice({	 "彩虹岛🔪",	 "富士山⛰️",	 "CG🌸",	 "返回主页🌱",}, nil, "")if CD==1 then	zb({298.00839233398,413.13671875,-283.45837402644})	gg.toast("彩虹岛🌈")endif CD==2 then    zb({298.00839233398,750,-283.45837402644})	gg.toast("富士山🌋")endif CD==3 then    zb({117.80199432373;1.0181401968;-1733.9892578125})	gg.toast("晨岛CG💙")endif CD==4 then	 HS18()end endfunction HS18()	 cdsy()endfunction cdsyyy()YY = gg.choice({	 "青青草原🌴",	 "幽灵船🚢",     "CG🌸",	 "返回主页🌱",}, nil, "")if YY==1 then    zb({314.92810058594,235.1559753418,162.17864990234})	gg.toast("青青草原🌴")endif YY==2 then    zb({97.56925201416,174.57604980469,265.3330078125})	gg.toast("幽灵船🚢")endif YY==3 then    zb({-529.29986572266;8.66990280151;-213.8560333252})	gg.toast("云野CG💙")endif YY==4 then	 HS19()end endfunction HS19()	 cdsy()endfunction cdsyyl()YL = gg.choice({	 "梅花桩🌻",	 "CG🌸",	 "返回主页🌱",}, nil, "")if YL==1 then    zb({-32.09742736816,206.96907043457,0.02679648809})	gg.toast("梅花桩🌻")endif YL==2 then    zb({-4.87363386154;9.68434524536;506.74230957031})	gg.toast("雨林CG💙")endif YL==3 then	 HS20()end endfunction HS20()	 cdsy()endfunction cdsyxg()XG = gg.choice({	 "千鸟城图🗺️",	 "霞谷城堡🏰",     "城堡云朵☁️",	 "返回主页🌱",}, nil, "")if XG==1 then    zb({314.91091918945,173.49656677246,-783.53955078125})	gg.toast("千鸟城图🗺")endif XG==2 then    zb({-478.84976196289,1573.01025390625,76.278465271})	gg.toast("霞谷城堡🏰")endif XG==3 then    zb({-813.96313476562,1547.04602050781,-506.09045410156})	gg.toast("城堡云朵☁")endif XG==4 then	 HS21()end endfunction HS21()	 cdsy()endfunction cdsymt()MT = gg.choice({	 "冰淇淋山🍨",	 "CG🌸",	 "返回主页🌱",}, nil, "")if MT==1 then    zb({-84.72422790527,5047.2763671875,-842.01507568359})	gg.toast("冰淇淋山🍨")endif MT==2 then    zb({-416.30792236328;12.31269836426;410.81399536133})	gg.toast("暮土CG💙")endif MT==3 then	 HS22()end endfunction HS22()	 cdsy()endfunction cdsyjg()JG = gg.choice({	 "闪电桥⚡",	 "蜡像馆🤶🏻",	 "日月岛🌓",     "办公室🌁",	 "太空站🌍",	 "返回主页🌱",}, nil, "")if JG==1 then    zb({32.18392944336,347.24133300781,41.18384552002})	gg.toast("闪电桥⚡")endif JG==2 then    zb({-1.04423522949,195.06649780273,4.06247663498})	gg.toast("蜡像馆🤶")endif JG==3 then    zb({68.92450714111,240.40475463867,-185.50691223145})	gg.toast("日月岛🌓")endif JG==4 then    zb({37.5173034668;83.08857727051;1.30369007587})	gg.toast("办公室🌁")endif JG==5 then    zb({7067.859375;6928.015625;9083.701171875})	gg.toast("太空站🌍")endif JG==6 then	 HS23()end endfunction HS23()	 cdsy()endfunction cdsybfy()BFY = gg.choice({	 "一图终点🌸",	 "二图终点🌼",	 "返回主页🌱",}, nil, "")if BFY==1 then    zb({-2.87694215775,195.81652832031,-19.7211227417})	gg.toast("一图终点🌸")endif BFY==2 then    zb({6.49172210693,265.99444580078,-243.16520690918})	gg.toast("二图终点🌼")endif BFY==3 then	 HS41()end endfunction HS41()	 cdsy()endlocal sssjj = 0function zwxl()G4=1ZW = gg.choice({	 "遇境水上世界💦",	 "迷惑魔法斗篷🎠",   	 "迷惑魔法帽子👦",   	 "迷惑魔法裤子👖",   	 "迷惑魔法面具🦊",     "迷惑魔法背饰🎃",     "进击的巨人   ⚠️️",	 "返回主页🌱",}, nil, "自慰系列️")if ZW==1 then        if sssjj ~= 1 then        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("1,066,279,012",gg.TYPE_DWORD)         gg.refineNumber("1,066,279,012",gg.TYPE_DWORD)        sssj = gg.getResults(1)        sssj[1].flags = gg.TYPE_FLOAT	    sssj[1].value = "99"	    sssj[1].freeze = true	    gg.addListItems(sssj)        gg.clearResults()	    sssjj=1        gg.toast("水上世界开启☔☔☔")	    else	    sssj[1].value = "1.11036348343"	    sssj[1].freeze = true	    gg.addListItems(sssj)	    sssjj=0        gg.toast("水上世界关闭☔☔☔")        endendif ZW==2 then    if zwdp ~= 1 then        cxcx = gg.prompt({"请输入斗篷代码"},{[1]=""},{[1]="number"})	    if cxcx == nil then	    gg.toast("不输入就退你脚本  Giao！！☀")	    Exit()	    else	    cxcx = cxcx[1]	    end        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("31076",gg.TYPE_DWORD)         gg.refineNumber("31076",gg.TYPE_DWORD)        zwddp = gg.getResultCount()        if zwddp ~= 0 then        zwxldp = gg.getResults(zwddp)        tmp = {}        for k, v in pairs(zwxldp) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address - 196            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                zwxldp[1] = tmp[k]                break            end        end        zwdppy={}	    zwdppy[1] = {}	    zwdppy[1].address = zwxldp[1].address + 8	    zwdppy[1].flags = gg.TYPE_DWORD	    zwdppy[1].value = cxcx        zwdppy[1].freeze = true        gg.addListItems(zwdppy)        gg.clearResults()        gg.toast("斗篷修改成功🎠🎠🎠")        end    endendif ZW==3 then    if zwtf ~= 1 then        tftf = gg.prompt({"请输入帽子代码"},{[1]=""},{[1]="number"})	    if tftf == nil then	    gg.toast("不输入就退你脚本  Giao！！☀")	    Exit()	    else	    tftf = tftf[1]	    end        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("31076",gg.TYPE_DWORD)         gg.refineNumber("31076",gg.TYPE_DWORD)        zwdtf = gg.getResultCount()        if zwdtf ~= 0 then        zwxltf = gg.getResults(zwdtf)        tmp = {}        for k, v in pairs(zwxltf) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address - 196            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                zwxltf[1] = tmp[k]                break            end        end        zwtfpy={}	    zwtfpy[1] = {}	    zwtfpy[1].address = zwxltf[1].address + 12	    zwtfpy[1].flags = gg.TYPE_DWORD	    zwtfpy[1].value = tftf        zwtfpy[1].freeze = true        gg.addListItems(zwtfpy)        gg.clearResults()        gg.toast("头饰修改成功👦👦️👦")        end    endendif ZW==4 then    if zwyf ~= 1 then        yfyf = gg.prompt({"请输入裤子代码"},{[1]=""},{[1]="number"})	    if yfyf == nil then	    gg.toast("不输入就退你脚本  Giao！！☀")	    Exit()	    else	    yfyf = yfyf[1]	    end        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("31076",gg.TYPE_DWORD)         gg.refineNumber("31076",gg.TYPE_DWORD)        zwdyf = gg.getResultCount()        if zwdyf ~= 0 then        zwxlyf = gg.getResults(zwdyf)        tmp = {}        for k, v in pairs(zwxlyf) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address - 196            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                zwxlyf[1] = tmp[k]                break            end        end        zwyfpy={}	    zwyfpy[1] = {}	    zwyfpy[1].address = zwxlyf[1].address + 4	    zwyfpy[1].flags = gg.TYPE_DWORD	    zwyfpy[1].value = yfyf        zwyfpy[1].freeze = true        gg.addListItems(zwyfpy)        gg.clearResults()        gg.toast("裤子修改成功👖👖👖")        end    endendif ZW==5 then    if zwmj ~= 1 then        mjmj = gg.prompt({"请输入面具代码"},{[1]=""},{[1]="number"})	    if mjmj == nil then	    gg.toast("不输入就退你脚本  Giao！！☀")	    Exit()	    else	    mjmj = mjmj[1]	    end        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("31076",gg.TYPE_DWORD)         gg.refineNumber("31076",gg.TYPE_DWORD)        zwdmj = gg.getResultCount()        if zwdmj ~= 0 then        zwxlmj = gg.getResults(zwdmj)        tmp = {}        for k, v in pairs(zwxlmj) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address - 196            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                zwxlmj[1] = tmp[k]                break            end        end        zwmjpy={}	    zwmjpy[1] = {}	    zwmjpy[1].address = zwxlmj[1].address + 16	    zwmjpy[1].flags = gg.TYPE_DWORD	    zwmjpy[1].value = mjmj        zwmjpy[1].freeze = true        gg.addListItems(zwmjpy)        gg.clearResults()        gg.toast("面具修改成功🦊🦊🦊")        end    endendif ZW==6 then    if zwbs ~= 1 then        bsbs = gg.prompt({"请输入背饰代码"},{[1]=""},{[1]="number"})	    if bsbs == nil then	    gg.toast("不输入就退你脚本  Giao！！☀")	    Exit()	    else	    bsbs = bsbs[1]	    end        gg.clearResults()        gg.setRanges(4)        gg.searchNumber("31076",gg.TYPE_DWORD)         gg.refineNumber("31076",gg.TYPE_DWORD)        zwdbs = gg.getResultCount()        if zwdbs ~= 0 then        zwxlbs = gg.getResults(zwdbs)        tmp = {}        for k, v in pairs(zwxlbs) do            tmp[#tmp + 1] = {}            tmp[#tmp].address = v.address - 196            tmp[#tmp].flags = gg.TYPE_DWORD        end        tmp = gg.getValues(tmp)        for k, v in pairs(tmp) do            if v.value == 1 then                zwxlbs[1] = tmp[k]                break            end        end        zwbspy={}	    zwbspy[1] = {}	    zwbspy[1].address = zwxlbs[1].address + 36	    zwbspy[1].flags = gg.TYPE_DWORD	    zwbspy[1].value = bsbs        zwbspy[1].freeze = true        gg.addListItems(zwbspy)        gg.clearResults()        gg.toast("背饰修改成功🎃🎃🎃")                 end    endendif ZW==7 then    gg.clearResults()	gg.setRanges(4)	gg.searchNumber("8197", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1)	shCount = gg.getResultCount()	sh = gg.getResults(shCount)	for k, v in pairs(sh) do		v.isMatch = true	end	local shtmp = {}	for i, v in ipairs(sh) do		shtmp[#shtmp+1] = {}		shtmp[#shtmp].address = v.address - 40		shtmp[#shtmp].flags = gg.TYPE_DWORD	end		shtmp = gg.getValues(shtmp)	for i, v in ipairs(shtmp) do		if "" .. v.value ~= "44" then			sh[i].isMatch = false		end	end	local shdata = {}	for i, v in ipairs(sh) do		if (v.isMatch) then    		shdata[#shdata+1] = v.address - 192		end	end	    for j = 1, 3 do	shsl = #shdata	local shqd = {}	for i = 1, shsl do		shqd[#shqd+1] = {}		shqd[#shqd].address = shdata[i] + j * 20		shqd[#shqd].flags = gg.TYPE_FLOAT		shqd[#shqd].value = "15"	end	gg.setValues(shqd)	end    gg.toast("🕸️凹凸曼修改成功🕸️")	gg.clearResults()	 endif ZW==8 then    Main()endendfunction Exit()    print("能快乐是最幸福的事")    gg.clearList()	os.exit()endaa()Main()while true dorepeatif gg.isVisible(true) thengg.setVisible(false)if G1 == 1 then i() break endif G2 == 1 then j() break endif G3 == 1 then cdsy() break endif G4 == 1 then zwxl() break endMain()enduntil trueend